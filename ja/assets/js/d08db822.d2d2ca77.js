"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[1205],{80529:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=s(74848),t=s(28453),a=(s(51441),s(35347));const i={sidebar_position:20,title:"Tokens",sidebar_label:"Tokens",description:"Momento\u30c8\u30fc\u30af\u30f3\u3068\u306f\u4f55\u304b\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002"},r="Momento tokens",l={id:"topics/develop/authentication/tokens",title:"Tokens",description:"Momento\u30c8\u30fc\u30af\u30f3\u3068\u306f\u4f55\u304b\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002",source:"@site/i18n/ja/docusaurus-plugin-content-docs/current/topics/develop/authentication/tokens.md",sourceDirName:"topics/develop/authentication",slug:"/topics/develop/authentication/tokens",permalink:"/ja/topics/develop/authentication/tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/topics/develop/authentication/tokens.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Tokens",sidebar_label:"Tokens",description:"Momento\u30c8\u30fc\u30af\u30f3\u3068\u306f\u4f55\u304b\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f5c\u6210\u65b9\u6cd5\u3001\u30c8\u30fc\u30af\u30f3\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002"},sidebar:"topicsSidebar",previous:{title:"API Keys",permalink:"/ja/topics/develop/authentication/api-keys"},next:{title:"Permissions",permalink:"/ja/topics/develop/authentication/permissions"}},c={},p=[{value:"\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b",id:"\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b",level:2},{value:"\u6709\u52b9\u671f\u9650",id:"\u6709\u52b9\u671f\u9650",level:2},{value:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",level:2},{value:"\u30c7\u30fc\u30bf\u5236\u9650",id:"\u30c7\u30fc\u30bf\u5236\u9650",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"momento-tokens",children:"Momento tokens"})}),"\n",(0,o.jsx)(n.p,{children:"\u30c8\u30fc\u30af\u30f3\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306a\u4e00\u6642\u7684\u306a\u72b6\u6cc1\u3067\u4f7f\u7528\u3055\u308c\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u305f\u3001\u77ed\u547d\u3067\u30b9\u30b3\u30fc\u30d7\u304c\u9650\u5b9a\u3055\u308c\u305f\u5024\u3067\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u30ed\u30b0\u30a4\u30f3\u306e\u3088\u3046\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30a4\u30d9\u30f3\u30c8\u3067\u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u6a19\u6e96\u7684\u306a\u671f\u9593\u3060\u3051\u6709\u52b9\u306a\u30c8\u30fc\u30af\u30f3\u304c\u767a\u884c\u3055\u308c\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002"}),"\n",(0,o.jsxs)(n.p,{children:["Momento \u30c8\u30fc\u30af\u30f3\u306f\u3001",(0,o.jsx)(n.em,{children:"\u30c7\u30fc\u30bf\u30d7\u30ec\u30fc\u30f3"}),"\u306b\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6709\u52b9\u306a\u30c8\u30fc\u30af\u30f3\u3092\u6301\u3064\u30e6\u30fc\u30b6\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\u3001\u524a\u9664\u3001\u30d5\u30e9\u30c3\u30b7\u30e5\u306a\u3069\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u305b\u3093\u3002"]}),"\n",(0,o.jsx)(n.p,{children:"\u5b8c\u5168\u306b\u7279\u6a29\u5316\u3055\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u6301\u3064\u30e6\u30fc\u30b6\u30fc\u306f\u3001\u4ee5\u4e0b\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\uff1a"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u3042\u3089\u3086\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u3092\u8ffd\u52a0/\u7de8\u96c6/\u524a\u9664\u3059\u308b\u3002"}),"\n",(0,o.jsx)(n.li,{children:"\u4efb\u610f\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u4efb\u610f\u306e\u30c8\u30d4\u30c3\u30af\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u3002"}),"\n",(0,o.jsx)(n.li,{children:"\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u3082\u3001\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8 API \u3092\u4f7f\u3063\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5024\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"\u30b7\u30b9\u30c6\u30e0\u8981\u4ef6\u306b\u57fa\u3065\u3044\u3066\u30c8\u30fc\u30af\u30f3\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3059\u308b\u306e\u306f\u3042\u306a\u305f\u6b21\u7b2c\u3067\u3059\u3002"}),"\n",(0,o.jsx)(n.h2,{id:"\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b",children:"\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/ja/topics/develop/authentication/api-keys",children:"API\u30ad\u30fc"}),"\u3092\u4f5c\u6210\u3059\u308b\u624b\u9806\u3068\u306f\u7570\u306a\u308a\u3001\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b\u552f\u4e00\u306e\u65b9\u6cd5\u306f\u30b3\u30fc\u30c9\u304b\u3089\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002Momento\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4f5c\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"]}),"\n",(0,o.jsx)(n.p,{children:"\u4ee5\u4e0b\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u6a29\u9650\u3067\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b\u4f8b\u3067\u3059\uff1a"}),"\n",(0,o.jsx)(a.r,{js:"// Generate a token that allows all data plane APIs on all caches and topics.\nconst allDataRWTokenResponse = await authClient.generateApiKey(AllDataReadWrite, ExpiresIn.minutes(30));\nswitch (allDataRWTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with AllDataReadWrite scope!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${allDataRWTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${allDataRWTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${allDataRWTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with AllDataReadWrite scope: ${allDataRWTokenResponse.errorCode()}: ${allDataRWTokenResponse.toString()}`\n    );\n}\n\n// Generate a token that can only call read-only data plane APIs on a specific cache foo. No topic apis (publish/subscribe) are allowed.\nconst singleCacheROTokenResponse = await authClient.generateApiKey(\n  TokenScopes.cacheReadOnly('foo'),\n  ExpiresIn.minutes(30)\n);\nswitch (singleCacheROTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with read-only access to cache foo!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${singleCacheROTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${singleCacheROTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${singleCacheROTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with single cache read-only scope: ${singleCacheROTokenResponse.errorCode()}: ${singleCacheROTokenResponse.toString()}`\n    );\n}\n\n// Generate a token that can call all data plane APIs on all caches. No topic apis (publish/subscribe) are allowed.\nconst allCachesRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.cacheReadWrite(AllCaches),\n  ExpiresIn.minutes(30)\n);\nswitch (allCachesRWTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with read-write access to all caches!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${allCachesRWTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${allCachesRWTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${allCachesRWTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with all caches read-write scope: ${allCachesRWTokenResponse.errorCode()}: ${allCachesRWTokenResponse.toString()}`\n    );\n}\n\n// Generate a token that can call publish and subscribe on all topics within cache bar\nconst singleCacheAllTopicsRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.topicPublishSubscribe({name: 'bar'}, AllTopics),\n  ExpiresIn.minutes(30)\n);\nswitch (singleCacheAllTopicsRWTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with publish-subscribe access to all topics within cache bar!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${singleCacheAllTopicsRWTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${singleCacheAllTopicsRWTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${singleCacheAllTopicsRWTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with read-write scope for all topics in a single cache: ${singleCacheAllTopicsRWTokenResponse.errorCode()}: ${singleCacheAllTopicsRWTokenResponse.toString()}`\n    );\n}\n\n// Generate a token that can only call subscribe on topic where_is_mo within cache mo_nuts\nconst oneCacheOneTopicRWTokenResponse = await authClient.generateApiKey(\n  TokenScopes.topicSubscribeOnly('mo_nuts', 'where_is_mo'),\n  ExpiresIn.minutes(30)\n);\nswitch (oneCacheOneTopicRWTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with subscribe-only access to topic where_is_mo within cache mo_nuts!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${oneCacheOneTopicRWTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${oneCacheOneTopicRWTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${oneCacheOneTopicRWTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with read-write scope for single topic in a single cache: ${oneCacheOneTopicRWTokenResponse.errorCode()}: ${oneCacheOneTopicRWTokenResponse.toString()}`\n    );\n}\n\n// Generate a token with multiple permissions\nconst cachePermission1 = {\n  role: CacheRole.ReadWrite, // Managed role that grants access to read as well as write apis on caches\n  cache: 'acorns', // Scopes the access to a single cache named 'acorns'\n};\nconst cachePermission2 = {\n  role: CacheRole.ReadOnly, // Managed role that grants access to only read data apis on caches\n  cache: AllCaches, // Built-in value for access to all caches in the account\n};\nconst topicPermission1 = {\n  role: TopicRole.PublishSubscribe, // Managed role that grants access to subscribe as well as publish apis\n  cache: 'walnuts', // Scopes the access to a single cache named 'walnuts'\n  topic: 'mo_favorites', // Scopes the access to a single topic named 'mo_favorites' within cache 'walnuts'\n};\nconst topicPermission2 = {\n  role: TopicRole.SubscribeOnly, // Managed role that grants access to only subscribe api\n  cache: AllCaches, // Built-in value for all cache(s) in the account.\n  topic: AllTopics, // Built-in value for access to all topics in the listed cache(s).\n};\n\nconst permissions = {\n  permissions: [cachePermission1, cachePermission2, topicPermission1, topicPermission2],\n};\n\nconst multiplePermsTokenResponse = await authClient.generateApiKey(permissions, ExpiresIn.minutes(30));\nswitch (multiplePermsTokenResponse.type) {\n  case GenerateApiKeyResponse.Success:\n    console.log('Generated an API key with multiple cache and topic permissions!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${multiplePermsTokenResponse.apiKey.substring(0, 10)}`);\n    console.log(`Refresh token starts with: ${multiplePermsTokenResponse.refreshToken.substring(0, 10)}`);\n    console.log(`Expires At: ${multiplePermsTokenResponse.expiresAt.epoch()}`);\n    break;\n  case GenerateApiKeyResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with multiple permissions: ${multiplePermsTokenResponse.errorCode()}: ${multiplePermsTokenResponse.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:'// Generate a token that allows all data plane APIs on all caches and topics.\nresp, err := authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope:     momento.AllDataReadWrite,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key with AllDataReadWrite scope!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}\n\n// Generate a token that can only call read-only data plane APIs on a specific cache foo. No topic apis (publish/subscribe) are allowed.\nresp, err = authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope:     momento.CacheReadOnly(momento.CacheName{Name: "foo"}),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key with read-only access to cache foo!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}\n\n// Generate a token that can call all data plane APIs on all caches. No topic apis (publish/subscribe) are allowed.\nresp, err = authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope:     momento.CacheReadWrite(momento.AllCaches{}),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key with read-write access to all caches!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}\n\n// Generate a token that can call publish and subscribe on all topics within cache bar\nresp, err = authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope:     momento.TopicPublishSubscribe(momento.CacheName{Name: "bar"}, momento.AllTopics{}),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key publish-subscribe access to all topics within cache bar!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}\n\n// Generate a token that can only call subscribe on topic where_is_mo within cache mo_nuts\nresp, err = authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope:     momento.TopicSubscribeOnly(momento.CacheName{Name: "mo_nuts"}, momento.TopicName{Name: "where_is_mo"}),\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key with subscribe-only access to topic where_is_mo within cache mo_nuts!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}\n\n// Generate a token with multiple permissions\ncachePermission1 := momento.CachePermission{\n\tCache: momento.CacheName{Name: "acorns"}, // Scopes the access to a single cache named \'acorns\'\n\tRole:  momento.ReadWrite,                 // Managed role that grants access to read as well as write apis on caches\n}\ncachePermission2 := momento.CachePermission{\n\tCache: momento.AllCaches{}, // Built-in value for access to all caches in the account\n\tRole:  momento.ReadOnly,    // Managed role that grants access to only read data apis on caches\n}\ntopicPermission1 := momento.TopicPermission{\n\tCache: momento.CacheName{Name: "walnuts"},      // Scopes the access to a single cache named \'walnuts\'\n\tTopic: momento.TopicName{Name: "mo_favorites"}, // Scopes the access to a single topic named \'mo_favorites\' within cache \'walnuts\'\n\tRole:  momento.PublishSubscribe,                // Managed role that grants access to subscribe as well as publish apis\n}\ntopicPermission2 := momento.TopicPermission{\n\tCache: momento.AllCaches{},   // Built-in value for all cache(s) in the account.\n\tTopic: momento.AllTopics{},   // Built-in value for access to all topics in the listed cache(s).\n\tRole:  momento.SubscribeOnly, // Managed role that grants access to only subscribe api\n}\npermissions := []momento.Permission{\n\tcachePermission1, cachePermission2, topicPermission1, topicPermission2,\n}\n\nresp, err = authClient.GenerateApiKey(ctx, &momento.GenerateApiKeyRequest{\n\tExpiresIn: utils.ExpiresInMinutes(30),\n\tScope: momento.Permissions{\n\t\tPermissions: permissions,\n\t},\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := resp.(type) {\ncase *auth_resp.GenerateApiKeySuccess:\n\tlog.Printf("Successfully generated an API key with multiple cache and topic permissions!\\n")\n\tlog.Printf("API key expires at: %d\\n", r.ExpiresAt.Epoch())\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,o.jsxs)(n.p,{children:["\u30c8\u30fc\u30af\u30f3\u4f5c\u6210\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001",(0,o.jsx)(n.a,{href:"/topics/api-reference/auth",children:"API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30da\u30fc\u30b8"}),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]}),"\n",(0,o.jsx)(n.h2,{id:"\u6709\u52b9\u671f\u9650",children:"\u6709\u52b9\u671f\u9650"}),"\n",(0,o.jsxs)(n.p,{children:["Momento \u30c8\u30fc\u30af\u30f3\u306b\u306f\u6709\u52b9\u671f\u9650\u304c\u5fc5\u8981\u3067\u3059\u3002",(0,o.jsx)(n.strong,{children:"\u30c8\u30fc\u30af\u30f3\u306e\u6700\u5927\u6709\u52b9\u671f\u9650\u306f1\u6642\u9593"}),"\u3067\u3059\u3002\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u308b\u3068\u3001\u65b0\u3057\u3044\u30c8\u30fc\u30af\u30f3\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"]}),"\n",(0,o.jsxs)(n.p,{children:["\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3067momento\u3092\u547c\u3073\u51fa\u3057\u3066\u3082\u3001\u63d0\u4f9b\u3055\u308c\u305f\u8a8d\u8a3c\u60c5\u5831\u304c\u30b5\u30fc\u30d3\u30b9\u306b\u63a5\u7d9a\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u793a\u3059 ",(0,o.jsx)(n.code,{children:"AUTHENTICATION_ERROR"})," \u5fdc\u7b54\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"\u30c8\u30fc\u30af\u30f3\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u3001\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u308b\u3068\u3001\u6c38\u4e45\u306b\u4f7f\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7d99\u7d9a\u3059\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u3082\u306e\u3092\u4f5c\u6210\u3057\u3066\u767a\u884c\u3059\u308b\u8cac\u4efb\u304c\u3042\u308a\u307e\u3059\u3002"})}),"\n",(0,o.jsx)(n.h2,{id:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9",children:"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9"}),"\n",(0,o.jsx)(n.p,{children:"\u3053\u308c\u3089\u306e\u30c8\u30fc\u30af\u30f3\u306f\u3001\u4ee5\u4e0b\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306b\u6700\u9069\u3067\u3059\uff1a"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u958b\u767a\u306bMomento\u3092\u4f7f\u7528\u3059\u308b"}),"\n",(0,o.jsx)(n.li,{children:"IoT \u30c7\u30d0\u30a4\u30b9\u3068\u306e\u901a\u4fe1"}),"\n",(0,o.jsx)(n.li,{children:"\u7279\u5b9a\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u4e00\u6642\u7684\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u306e\u767a\u884c"}),"\n",(0,o.jsx)(n.li,{children:"\u30ed\u30b0\u30a4\u30f3\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u306b\u8a8d\u8a3c\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308b"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\u30c7\u30fc\u30bf\u5236\u9650",children:"\u30c7\u30fc\u30bf\u5236\u9650"}),"\n",(0,o.jsxs)(n.p,{children:["\u30c8\u30fc\u30af\u30f3\u306e\u4e00\u822c\u7684\u306a\u4f7f\u7528\u4f8b\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u5c0f\u3055\u306a\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u306b\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u30c8\u30fc\u30af\u30f3\u3092",(0,o.jsx)(n.em,{children:"\u8aad\u307f\u53d6\u308a\u5c02\u7528"}),"\u30a2\u30af\u30bb\u30b9\u3067\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306b\u6a5f\u80fd\u3092\u5236\u9650\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u500b\u3005\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30a4\u30c6\u30e0\u3084\u30c8\u30d4\u30c3\u30af\u306b\u30b9\u30b3\u30fc\u30d7\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"]}),"\n",(0,o.jsxs)(n.p,{children:["\u30c7\u30fc\u30bf\u5236\u9650\u3067\u4f55\u304c\u3067\u304d\u308b\u304b\u3092\u5b8c\u5168\u306b\u7406\u89e3\u3059\u308b\u306b\u306f\u3001",(0,o.jsx)(n.a,{href:"/ja/topics/develop/authentication/permissions",children:"permissions page"}),"\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},51441:(e,n,s)=>{s(96540)},35347:(e,n,s)=>{s.d(n,{r:()=>y});var o=s(11470),t=s(19365),a=s(21432),i=(s(96540),s(27293)),r=s(74848);const l="https://github.com/momentohq/client-sdk-javascript/blob/main/examples/nodejs/cache/doc-example-files/doc-examples-js-apis.ts",c="https://github.com/momentohq/client-sdk-python/blob/main/examples/py310/doc-examples-python-apis.py",p="https://github.com/momentohq/client-sdk-java/blob/main/examples/cache/src/main/java/momento/client/example/doc_examples/DocExamplesJavaAPIs.java",h="https://github.com/momentohq/client-sdk-kotlin/blob/main/examples/src/main/kotlin/software/momento/example/doc_examples/DocExamples.kt",d="https://github.com/momentohq/client-sdk-go/blob/main/examples/docs-examples/main.go",m="https://github.com/momentohq/client-sdk-dotnet/blob/main/examples/DocExampleApis/Program.cs",u="https://github.com/momentohq/client-sdk-php/blob/main/examples/doc-examples-php-apis.php",g="https://github.com/momentohq/client-sdk-rust/blob/main/example/rust/src/docs_examples/docs_examples.rs",b="https://github.com/momentohq/client-sdk-elixir/blob/main/examples/doc_examples.exs",x="https://github.com/momentohq/client-sdk-swift/blob/main/Examples/doc-example-apis/Sources/main.swift",k="https://github.com/momentohq/client-sdk-dart/blob/main/example/doc_example_apis/bin/doc_example_apis.dart",y=e=>{let{js:n,python:s,java:y,kotlin:A,go:f,csharp:R,php:w,rust:j,ruby:T,elixir:P,swift:C,dart:v,cli:I}=e;return n||s||y||A||f||R||w||j||T||P||C||v||I?(0,r.jsxs)(o.A,{children:[n&&(0,r.jsxs)(t.A,{value:"js",label:"JavaScript",children:[(0,r.jsx)(a.default,{language:"js",children:n}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:l,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),s&&(0,r.jsxs)(t.A,{value:"python",label:"Python",children:[(0,r.jsx)(a.default,{language:"python",children:s}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:c,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),y&&(0,r.jsxs)(t.A,{value:"java",label:"Java",children:[(0,r.jsx)(a.default,{language:"java",children:y}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:p,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),A&&(0,r.jsxs)(t.A,{value:"kotlin",label:"Kotlin",children:[(0,r.jsx)(a.default,{language:"kotlin",children:A}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:h,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),f&&(0,r.jsxs)(t.A,{value:"go",label:"Go",children:[(0,r.jsx)(a.default,{language:"go",children:f}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:d,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),R&&(0,r.jsxs)(t.A,{value:"csharp",label:"C#",children:[(0,r.jsx)(a.default,{language:"csharp",children:R}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:m,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),w&&(0,r.jsxs)(t.A,{value:"php",label:"PHP",children:[(0,r.jsx)(a.default,{language:"php",children:w}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:u,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),j&&(0,r.jsxs)(t.A,{value:"rust",label:"Rust",children:[(0,r.jsx)(a.default,{language:"rust",children:j}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:g,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),T&&(0,r.jsx)(t.A,{value:"ruby",label:"Ruby",children:(0,r.jsx)(a.default,{language:"ruby",children:T})}),P&&(0,r.jsxs)(t.A,{value:"elixir",label:"Elixir",children:[(0,r.jsx)(a.default,{language:"elixir",children:P}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:b,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),C&&(0,r.jsxs)(t.A,{value:"swift",label:"Swift",children:[(0,r.jsx)(a.default,{language:"swift",children:C}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:x,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),v&&(0,r.jsxs)(t.A,{value:"dart",label:"Dart",children:[(0,r.jsx)(a.default,{language:"dart",children:v}),(0,r.jsxs)(i.A,{type:"info",children:["Full example code and imports can be found ",(0,r.jsx)("a",{href:k,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),I&&(0,r.jsx)(t.A,{value:"cli",label:"CLI",children:(0,r.jsx)(a.default,{language:"cli",children:I})})]}):null}}}]);