"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[4391],{66734:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var a=n(74848),i=n(28453);const o={sidebar_label:"Measuring Usage (Operations)",sidebar_position:9,title:"Momento Cache measuring usage with operations",pagination_next:null,description:"Learn how Momento Cache meters and bills for usage based on operations.",hide_title:!0},s="Momento Cache measures usage with operations",r={id:"cache/manage/operations",title:"Momento Cache measuring usage with operations",description:"Learn how Momento Cache meters and bills for usage based on operations.",source:"@site/docs/cache/manage/operations.mdx",sourceDirName:"cache/manage",slug:"/cache/manage/operations",permalink:"/ja/cache/manage/operations",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/manage/operations.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_label:"Measuring Usage (Operations)",sidebar_position:9,title:"Momento Cache measuring usage with operations",pagination_next:null,description:"Learn how Momento Cache meters and bills for usage based on operations.",hide_title:!0},sidebar:"cacheSidebar",previous:{title:"Quotas and Limits",permalink:"/ja/cache/manage/limits"}},c={},l=[{value:"What is an operation?",id:"what-is-an-operation",level:2},{value:"Calculating operation cost of an API call",id:"calculating-operation-cost-of-an-api-call",level:2},{value:"API Complexity Factors",id:"api-complexity-factors",level:2},{value:"API Parameter Modifiers",id:"api-parameter-modifiers",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"momento-cache-measures-usage-with-operations",children:"Momento Cache measures usage with operations"})}),"\n",(0,a.jsx)(t.h2,{id:"what-is-an-operation",children:"What is an operation?"}),"\n",(0,a.jsx)(t.p,{children:"An operation is a unit of work that reflects the utilization of networking and compute power. As a request consumes more resources, the operation count will increase proportionally."}),"\n",(0,a.jsx)(t.p,{children:"The number of operations incurred by a request depends on two factors:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"the size of user data transfered in the API call"}),"\n",(0,a.jsx)(t.li,{children:"the API called, plus any parameters that modify its behavior"}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"calculating-operation-cost-of-an-api-call",children:"Calculating operation cost of an API call"}),"\n",(0,a.jsxs)(t.p,{children:["The base operation count for an API call is the number of 1024 byte chunks in ",(0,a.jsx)(t.em,{children:"each"})," item or collection element transfered by the request and by the response. When a request or response contains no items or elements, the user-supplied data it contains is treated as a single item."]}),"\n",(0,a.jsx)(t.p,{children:"Each API has an operational complexity factor, as listed in the table below. The total operation count for an API call is the complexity factor multiplied by the base operation count."}),"\n",(0,a.jsx)(t.p,{children:"All validly-authenticated API calls, including empty results or misconfigured requests, incur a minimum of 1 operation."}),"\n",(0,a.jsx)(t.h2,{id:"api-complexity-factors",children:"API Complexity Factors"}),"\n",(0,a.jsx)(t.p,{children:"This table defines the operational complexity factors for Momento Cache APIs. If an API is not listed below, its complexity factor is 1."}),"\n",(0,a.jsxs)("table",{className:"customTable",children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"API Name"}),(0,a.jsx)("th",{children:"Complexity Factor"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfAbsent"}),(0,a.jsx)("td",{children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfPresent"}),(0,a.jsx)("td",{children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfEqual"}),(0,a.jsx)("td",{children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfNotEqual"}),(0,a.jsx)("td",{children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfPresentAndNotEqual"}),(0,a.jsx)("td",{children:"2"})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"SetIfAbsentOrEqual"}),(0,a.jsx)("td",{children:"2"})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"api-parameter-modifiers",children:"API Parameter Modifiers"}),"\n",(0,a.jsxs)(t.p,{children:["Some APIs may be modified by the ",(0,a.jsx)(t.a,{href:"/cache/learn/how-it-works/read-concern",children:"ReadConcern parameter"}),". When ",(0,a.jsx)(t.code,{children:"ReadConcern"})," is set to ",(0,a.jsx)(t.code,{children:"Consistent"}),", the operation cost is multiplied by an additional factor of 2."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var a=n(96540);const i={},o=a.createContext(i);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);