"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[4893],{44413:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(74848),r=n(28453),s=(n(42821),n(70503));const a={sidebar_position:3,sidebar_label:"Storage",displayed_sidebar:"platformSidebar",title:"Getting started with Momento Storage in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Storage.",keywords:["momento","cache","caching","topics","pubsub","pub/sub","eda","event-driven architecture","redis","serverless","storage","persistence","datastore","database","durable","sdk","sdks","api","examples","resources","getting started","quick start","server-side","rust"]},i="Getting Started with Momento Storage in Rust",l={id:"platform/sdks/rust/storage",title:"Getting started with Momento Storage in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Storage.",source:"@site/docs/platform/sdks/rust/storage.mdx",sourceDirName:"platform/sdks/rust",slug:"/platform/sdks/rust/storage",permalink:"/platform/sdks/rust/storage",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/platform/sdks/rust/storage.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Storage",displayed_sidebar:"platformSidebar",title:"Getting started with Momento Storage in Rust",description:"Learn the basic building blocks for writing Rust code to interact with Momento Storage.",keywords:["momento","cache","caching","topics","pubsub","pub/sub","eda","event-driven architecture","redis","serverless","storage","persistence","datastore","database","durable","sdk","sdks","api","examples","resources","getting started","quick start","server-side","rust"]},sidebar:"platformSidebar",previous:{title:"Topics",permalink:"/platform/sdks/rust/topics"},next:{title:"Dart",permalink:"/platform/sdks/dart/"}},d={},c=[{value:"Install the Momento SDK",id:"install-the-momento-sdk",level:2},{value:"Set up your API key",id:"set-up-your-api-key",level:2},{value:"Import libraries and connect to return a StorageClient object",id:"import-libraries-and-connect-to-return-a-storageclient-object",level:2},{value:"Create a new store in Momento Storage",id:"create-a-new-store-in-momento-storage",level:2},{value:"List the names of existing stores in your account",id:"list-the-names-of-existing-stores-in-your-account",level:2},{value:"Write an item to a store",id:"write-an-item-to-a-store",level:2},{value:"Read an item from a store",id:"read-an-item-from-a-store",level:2},{value:"Running the code",id:"running-the-code",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"getting-started-with-momento-storage-in-rust",children:"Getting Started with Momento Storage in Rust"})}),"\n",(0,o.jsxs)(t.p,{children:["If you need to get going quickly with Rust and Momento Storage, this page contains the basic API calls you'll need. ",(0,o.jsx)(t.a,{href:"https://github.com/momentohq/client-sdk-rust/tree/main/examples",children:"Check the Rust SDK examples"})," for complete, working examples including build configuration files."]}),"\n",(0,o.jsx)(t.h2,{id:"install-the-momento-sdk",children:"Install the Momento SDK"}),"\n",(0,o.jsxs)(t.p,{children:["The Momento SDK is available on crates.io: ",(0,o.jsx)(t.a,{href:"https://crates.io/crates/momento",children:"momento"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsxs)(t.p,{children:["Visit ",(0,o.jsx)(t.a,{href:"https://crates.io/crates/momento",children:"crates.io"})," to find the latest available version of the SDK."]})}),"\n",(0,o.jsx)(t.p,{children:"Install the client library in an existing Rust project:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cli",children:"cargo add momento\n"})}),"\n",(0,o.jsx)(t.h2,{id:"set-up-your-api-key",children:"Set up your API key"}),"\n",(0,o.jsxs)(t.p,{children:["You'll need a Momento API key to authenticate with Momento.  You can get one from the ",(0,o.jsx)(t.a,{href:"https://console.gomomento.com/api-keys",children:"Momento Web Console"}),".\nOnce you have your API key, store it in an environment variable so that the Momento client can consume it:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"export MOMENTO_API_KEY=<your Momento API key here>\n"})}),"\n",(0,o.jsx)(t.h2,{id:"import-libraries-and-connect-to-return-a-storageclient-object",children:"Import libraries and connect to return a StorageClient object"}),"\n",(0,o.jsx)(t.p,{children:"This code sets up the main function, the necessary imports, and the StorageClient that will be used to interact with your store."}),"\n",(0,o.jsx)(s.F,{language:"rust",code:'use momento::{\n  storage, CredentialProvider, MomentoResult, PreviewStorageClient,\n};\n\n#[tokio::main]\nasync fn main() -> MomentoResult<()> {\n  let storage_client = PreviewStorageClient::builder()\n  .configuration(storage::configurations::Laptop::latest())\n  .credential_provider(\n      CredentialProvider::from_env_var("MOMENTO_API_KEY".to_string())\n          .expect("API key should be valid"),\n  )\n  .build()?;\n\n  // ...\n\n  Ok(())\n}'}),"\n",(0,o.jsx)(t.h2,{id:"create-a-new-store-in-momento-storage",children:"Create a new store in Momento Storage"}),"\n",(0,o.jsx)(t.p,{children:"Use this function to create a new store in your account."}),"\n",(0,o.jsx)(s.F,{language:"rust",code:'  let response = storage_client.create_store(store_name).await?;\n  match response {\n      momento::storage::CreateStoreResponse::Created => println!("Store {} created", store_name),\n      momento::storage::CreateStoreResponse::AlreadyExists => println!("Store {} already exists", store_name),\n  }'}),"\n",(0,o.jsx)(t.h2,{id:"list-the-names-of-existing-stores-in-your-account",children:"List the names of existing stores in your account"}),"\n",(0,o.jsx)(t.p,{children:"A simple list of the names of stores for the account."}),"\n",(0,o.jsx)(s.F,{language:"rust",code:'  let response = storage_client.list_stores().await?;\n  println!("Stores: {:#?}", response.stores);'}),"\n",(0,o.jsx)(t.h2,{id:"write-an-item-to-a-store",children:"Write an item to a store"}),"\n",(0,o.jsx)(t.p,{children:"A simple example of doing a put operation."}),"\n",(0,o.jsx)(s.F,{language:"rust",code:'  storage_client.put(store_name, "key", "value").await?;\n  println!("Put key and value in store {}", store_name);'}),"\n",(0,o.jsx)(t.h2,{id:"read-an-item-from-a-store",children:"Read an item from a store"}),"\n",(0,o.jsx)(t.p,{children:"This is an example of a simple read operation to get an item from a store."}),"\n",(0,o.jsx)(s.F,{language:"rust",code:'  let response = storage_client.get(store_name, "key").await?;\n  match response {\n      momento::storage::GetResponse::NotFound => println!("Key not found in {}", store_name),\n      momento::storage::GetResponse::Found { value } => {\n          // A Found response indicates the value was found in the store.\n\n          // Use `match` to get the value if you don\'t know the type beforehand:\n          match value.clone() {\n              momento::storage::StorageValue::String(value) => println!("Got string value {}", value),\n              momento::storage::StorageValue::Bytes(value) => println!("Got bytes value {:?}", value),\n              momento::storage::StorageValue::Integer(value) => println!("Got integer value {}", value),\n              momento::storage::StorageValue::Double(value) => println!("Got double value {}", value),\n          }\n\n          // If you know the type you\'re expecting, you can `try_into()` it directly:\n          let found_value: String = value.try_into()?;\n          println!("Got value {}", found_value);\n      }\n  }'}),"\n",(0,o.jsx)(t.h2,{id:"running-the-code",children:"Running the code"}),"\n",(0,o.jsxs)(t.p,{children:["You can find complete, working examples in the ",(0,o.jsx)(t.a,{href:"https://github.com/momentohq/client-sdk-rust/tree/main/example",children:"Rust SDK github repo examples directory"}),"."]}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["Beyond these basic API calls check out the ",(0,o.jsx)(t.a,{href:"/storage/develop/api-reference/",children:"API reference page"})," for more information on the full assortment of Momento API calls."]})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},42821:(e,t,n)=>{n(96540)},70503:(e,t,n)=>{n.d(t,{F:()=>s});var o=n(21432),r=(n(96540),n(74848));const s=e=>{let{language:t,code:n}=e;return(0,r.jsx)(o.A,{language:t,children:n})}}}]);