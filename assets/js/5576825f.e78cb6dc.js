(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[6853],{75195:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var s=t(74848),o=t(28453),r=(t(42821),t(70503)),i=t(68254),a=t(37206);const c={sidebar_position:30,title:"Leverage Momento Topics, webhooks, and tokens in your event-driven architectures",sidebar_label:"Identifying unique resources",description:"Learn best practices around using Momento Topics, webhooks, and tokens to process unique resources in your event-driven architectures.",keywords:["topics","webhooks","eda","momento","event-driven architecture"]},l="Leverage Momento Topics, webhooks, and tokens in your event-driven architectures",d={id:"topics/patterns/token_id_webhook",title:"Leverage Momento Topics, webhooks, and tokens in your event-driven architectures",description:"Learn best practices around using Momento Topics, webhooks, and tokens to process unique resources in your event-driven architectures.",source:"@site/docs/topics/patterns/token_id_webhook.md",sourceDirName:"topics/patterns",slug:"/topics/patterns/token_id_webhook",permalink:"/topics/patterns/token_id_webhook",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/topics/patterns/token_id_webhook.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"Leverage Momento Topics, webhooks, and tokens in your event-driven architectures",sidebar_label:"Identifying unique resources",description:"Learn best practices around using Momento Topics, webhooks, and tokens to process unique resources in your event-driven architectures.",keywords:["topics","webhooks","eda","momento","event-driven architecture"]},sidebar:"topicsSidebar",previous:{title:"Running background tasks",permalink:"/topics/patterns/running-background-tasks"},next:{title:"Develop",permalink:"/topics/develop/"}},u={},h=[{value:"Getting Started",id:"getting-started",level:2},{value:"See More",id:"see-more",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"leverage-momento-topics-webhooks-and-tokens-in-your-event-driven-architectures",children:"Leverage Momento Topics, webhooks, and tokens in your event-driven architectures"})}),"\n",(0,s.jsxs)(n.p,{children:["With ",(0,s.jsx)(n.a,{href:"../",children:"Momento Topics"}),", you can subscribe to messages on a topic and publish messages to a different topic. ",(0,s.jsx)(n.a,{href:"../webhooks/overview",children:"Webhooks"})," serve as HTTP callbacks triggered in response to messages published to these topics, acting as stateless consumers. ",(0,s.jsx)(n.a,{href:"../../cache/develop/authentication/tokens",children:"Tokens"})," are designed to provide short-lived session tokens for users and services interacting with a system. By embedding unique identifiers (",(0,s.jsx)(n.code,{children:"token_id"}),") in each token, they ensure secure and traceable access to resources."]}),"\n",(0,s.jsxs)(n.p,{children:["The key here is that you can use Topics to facilitate real-time communication between users by granting them short-lived tokens. These tokens can be embedded with user information (",(0,s.jsx)(n.code,{children:"token_id"}),"), which, when messages are published, can be leveraged to access shared resources like Momento caches via webhook callbacks. For instance, you can personalize user experiences by accessing their information stored in a Momento cache by identifying the user through the ",(0,s.jsx)(n.code,{children:"token_id"}),". Embedding information provides two significant advantages:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"It enhances security and prevents a user from spoofing their identity."}),"\n",(0,s.jsx)(n.li,{children:"It reduces data transfer costs as the user information is embedded with the token itself."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Architecture",src:t(34999).A+"",width:"547",height:"520"})}),"\n",(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://console.gomomento.com/caches/create",children:"Create a cache in the Momento console"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/topics/webhooks/creating-a-webhook",children:"Create a webhook"})," for the cache. Assign the webhook destination to a public facing endpoint. This endpoint must accept POST requests and be able to receive inbound calls from Momento. More detail about the structure of this event is ",(0,s.jsx)(n.a,{href:"../webhooks/overview#example-event",children:"described here"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Create your infrastructure. For example, below is sample code that creates a lambda function URL for our webhook endpoint. It also stores\nyour Momento auth token in AWS secrets manager."}),"\n"]}),"\n",(0,s.jsx)(r.F,{language:"javascript",code:"import * as path from 'path';\nimport * as cdk from 'aws-cdk-lib';\nimport {Construct} from 'constructs';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\nimport * as lambdaNodejs from 'aws-cdk-lib/aws-lambda-nodejs';\nimport * as secrets from 'aws-cdk-lib/aws-secretsmanager';\nimport {CfnOutput} from 'aws-cdk-lib';\n\nexport class MomentoWebhookStack extends cdk.Stack {\n  constructor(scope: Construct, id: string, props?: cdk.StackProps) {\n    super(scope, id, props);\n\n    const momentoApiKeyParam = new cdk.CfnParameter(this, 'MomentoApiKey', {\n      type: 'String',\n      description: 'The Momento API key that will be used to read from the cache.',\n      noEcho: true,\n    });\n\n    const momentoSecretStringParam = new cdk.CfnParameter(this, 'MomentoSecretString', {\n      type: 'String',\n      description: 'The Momento Webhook Secret String that will be used to validate the caller',\n      noEcho: true,\n    });\n\n    const apiKeySecret = new secrets.Secret(this, 'MomentoWebhookHandlerApiKey', {\n      secretName: 'MomentoWebhookHandlerApiKey',\n      secretStringValue: new cdk.SecretValue(momentoApiKeyParam.valueAsString),\n    });\n\n    const secretStringSecret = new secrets.Secret(this, 'MomentoWebhookHandlerSecretString', {\n      secretName: 'MomentoWebhookHandlerSecretString',\n      secretStringValue: new cdk.SecretValue(momentoSecretStringParam.valueAsString),\n    });\n\n    const webhookHandlerLambda = new lambdaNodejs.NodejsFunction(this, 'MomentoWebhookHandler', {\n      functionName: 'MomentoWebhookHandler',\n      runtime: lambda.Runtime.NODEJS_18_X,\n      entry: path.join(__dirname, '../../lambda/webhook-handler/handler.ts'),\n      projectRoot: path.join(__dirname, '../../lambda/webhook-handler'),\n      depsLockFilePath: path.join(__dirname, '../../lambda/webhook-handler/package-lock.json'),\n      handler: 'handler',\n      timeout: cdk.Duration.seconds(30),\n      memorySize: 128,\n      environment: {\n        MOMENTO_API_KEY_SECRET_NAME: apiKeySecret.secretName,\n        THE_SIGNING_SECRET: secretStringSecret.secretName,\n      },\n    });\n\n    const serviceLambda = new lambdaNodejs.NodejsFunction(this, 'ServiceLambda', {\n      functionName: 'ServiceLambda',\n      runtime: lambda.Runtime.NODEJS_18_X,\n      entry: path.join(__dirname, '../../lambda/service-topics/handler.ts'),\n      projectRoot: path.join(__dirname, '../../lambda/service-topics'),\n      depsLockFilePath: path.join(__dirname, '../../lambda/service-topics/package-lock.json'),\n      handler: 'handler',\n      timeout: cdk.Duration.seconds(30),\n      memorySize: 128,\n      environment: {\n        MOMENTO_API_KEY_SECRET_NAME: apiKeySecret.secretName,\n      },\n    });\n\n    // \ud83d\udc47 Setup lambda url\n    const lambdaUrl = webhookHandlerLambda.addFunctionUrl({\n      authType: lambda.FunctionUrlAuthType.NONE,\n    });\n\n    apiKeySecret.grantRead(webhookHandlerLambda);\n    apiKeySecret.grantRead(serviceLambda);\n    secretStringSecret.grantRead(webhookHandlerLambda);\n\n    new CfnOutput(this, 'FunctionUrl ', {value: lambdaUrl.url});\n  }\n}\n"}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Add code to the webhook to process incoming messages. Below is sample code for the webhook lambda handler that extracts a user's ",(0,s.jsx)(n.code,{children:"token_id"})," from the webhook payload, and access resources stored in Momento cache. It also verifies that the webhook caller is indeed Momento through the signing secret."]}),"\n"]}),"\n",(0,s.jsx)(r.F,{language:"javascript",code:"import {GetSecretValueCommand, SecretsManagerClient} from '@aws-sdk/client-secrets-manager';\nimport {\n  CacheClient,\n  CacheListPushFrontResponse,\n  Configurations,\n  CredentialProvider,\n  WebhookUtils,\n} from '@gomomento/sdk';\n\nconst _secretsClient = new SecretsManagerClient({});\nconst _cachedSecrets = new Map<string, string>();\nlet _cacheClient: CacheClient | undefined = undefined;\n\nconst cacheName = 'course-comments';\n\ninterface LambdaEvent {\n  headers: Record<string, string>;\n  body: string;\n}\n\ninterface Payload {\n  token_id: string;\n  text: string;\n}\n\ninterface Message {\n  courseId: string;\n  comment: string;\n}\n\nexport const handler = async (event: LambdaEvent) => {\n  try {\n    const secretStringSecretName = process.env.THE_SIGNING_SECRET;\n\n    if (secretStringSecretName === undefined) {\n      throw new Error(\"Missing required env var 'THE_SIGNING_SECRET\");\n    }\n\n    const secretString = await getSecret(secretStringSecretName);\n    const authorized = WebhookUtils.validateWebhookRequest({\n      signature: event.headers['momento-signature'],\n      signingSecret: secretString,\n      body: event.body,\n    });\n\n    if (authorized !== WebhookUtils.RequestValidation.VALID) {\n      return {\n        statusCode: 403,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: '{\"message\": \"Access Denied!\"}',\n      };\n    }\n\n    const payload: Payload = JSON.parse(event.body) as Payload;\n    const userID = payload.token_id;\n    const message = JSON.parse(payload.text) as Message;\n\n    console.log('Storing user comment for userID ' + userID + ' and courseId ' + message.courseId);\n    console.log('Comment: ' + message.comment);\n\n    const cacheClient = await getCacheClient();\n    if (_cacheClient === undefined) {\n      throw new Error('Cache client is undefined');\n    }\n\n    const listResp = await cacheClient.listPushFront(\n      cacheName,\n      String(message.courseId),\n      JSON.stringify({userID: userID, comment: message.comment})\n    );\n    switch (listResp.type) {\n      case CacheListPushFrontResponse.Success:\n        console.log('Successfully persisted comment for course');\n        break;\n      case CacheListPushFrontResponse.Error:\n        console.log('Error while publishing comment for course ' + listResp.message());\n        break;\n    }\n\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: '{}',\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        message: 'An error occurred!' + String(err),\n      }),\n    };\n  }\n};\n\nasync function getSecret(secretName: string): Promise<string> {\n  if (!_cachedSecrets.has(secretName)) {\n    const secretResponse = await _secretsClient.send(new GetSecretValueCommand({SecretId: secretName}));\n    if (secretResponse) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      _cachedSecrets.set(secretName, secretResponse.SecretString!);\n    } else {\n      throw new Error(`Unable to retrieve secret: ${secretName}`);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return _cachedSecrets.get(secretName)!;\n}\n\nasync function getCacheClient(): Promise<CacheClient> {\n  const apiKeySecretName = process.env.MOMENTO_API_KEY_SECRET_NAME;\n  if (apiKeySecretName === undefined) {\n    throw new Error(\"Missing required env var 'MOMENTO_API_KEY_SECRET_NAME\");\n  }\n  if (_cacheClient === undefined) {\n    const momentoApiKey = await getSecret(apiKeySecretName);\n    console.log('Retrieved secret!');\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n    _cacheClient = await CacheClient.create({\n      configuration: Configurations.Lambda.latest(),\n      credentialProvider: CredentialProvider.fromString({apiKey: momentoApiKey}),\n      defaultTtlSeconds: 60,\n    });\n  }\n  return _cacheClient;\n}\n"}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsx)(n.li,{children:"Finally, below has sample code for generating the token and publishing user messages on a topic. In a real-world,\nthese would ideally live in separate micro-services."}),"\n"]}),"\n",(0,s.jsx)(r.F,{language:"javascript",code:"import {GetSecretValueCommand, SecretsManagerClient} from '@aws-sdk/client-secrets-manager';\nimport {\n  AuthClient,\n  Configurations,\n  CredentialProvider,\n  DisposableTokenScopes,\n  ExpiresIn,\n  GenerateDisposableTokenResponse,\n  TopicClient,\n  TopicPublishResponse,\n} from '@gomomento/sdk';\n\nconst _secretsClient = new SecretsManagerClient({});\nconst _cachedSecrets = new Map<string, string>();\nlet _authClient: AuthClient | undefined = undefined;\nlet _topicClient: TopicClient | undefined = undefined;\n\nconst cacheName = 'course-comments';\nconst topicName = 'comment';\n\nexport const handler = async () => {\n  try {\n    const authClient = await getAuthClient();\n\n    const eventsPublishToken = await authClient.generateDisposableToken(\n      DisposableTokenScopes.topicPublishOnly(cacheName, topicName),\n      ExpiresIn.minutes(30),\n      {tokenId: 'taylor'}\n    );\n\n    switch (eventsPublishToken.type) {\n      case GenerateDisposableTokenResponse.Success: {\n        console.log('Generated a disposable API key with access to the \"events\" topic in the \"cache\" cache!');\n        // logging only a substring of the tokens, because logging security credentials is not advisable :)\n        //console.log(`API key starts with: ${eventsPublishToken.authToken.substring(0, 10)}`);\n        //console.log(`Expires At: ${eventsPublishToken.expiresAt.epoch()}`);\n        console.log('Publishing to the \"events\" topic in the \"cache\" cache! using the generated disposable token');\n        const topicClient = getTopicClient(eventsPublishToken.authToken);\n        const message = JSON.stringify({\n          comment: 'This course and video is awesome!',\n          courseId: 123,\n        });\n        console.log('Message: ' + message);\n        const publishResponse = await topicClient.publish(cacheName, topicName, message);\n        switch (publishResponse.type) {\n          case TopicPublishResponse.Success:\n            console.log('Published to the \"events\" topic in the \"cache\" cache!');\n            break;\n          case TopicPublishResponse.Error:\n            throw new Error(\n              `An error occurred while attempting to publish to the \"events\" topic in the \"cache\" cache: ${publishResponse.errorCode()}: ${publishResponse.toString()}`\n            );\n        }\n        break;\n      }\n      case GenerateDisposableTokenResponse.Error:\n        throw new Error(\n          `An error occurred while attempting to call generateApiKey with disposable token scope: ${eventsPublishToken.errorCode()}: ${eventsPublishToken.toString()}`\n        );\n    }\n    return {\n      statusCode: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: '{}',\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      statusCode: 500,\n      body: JSON.stringify({\n        message: 'An error occurred!',\n      }),\n    };\n  }\n};\n\nasync function getAuthClient(): Promise<AuthClient> {\n  const apiKeySecretName = process.env.MOMENTO_API_KEY_SECRET_NAME;\n  if (apiKeySecretName === undefined) {\n    throw new Error(\"Missing required env var 'MOMENTO_API_KEY_SECRET_NAME\");\n  }\n  if (_authClient === undefined) {\n    const momentoApiKey = await getSecret(apiKeySecretName);\n    console.log('Retrieved secret!');\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-assignment\n    _authClient = new AuthClient({\n      credentialProvider: CredentialProvider.fromString({apiKey: momentoApiKey}),\n    });\n  }\n  return _authClient;\n}\n\nfunction getTopicClient(disposableTokenKey: string): TopicClient {\n  if (_topicClient === undefined) {\n    console.log('Retrieved secret!');\n    _topicClient = new TopicClient({\n      configuration: Configurations.Lambda.latest(),\n      credentialProvider: CredentialProvider.fromString({apiKey: disposableTokenKey}),\n    });\n  }\n\n  return _topicClient;\n}\n\nasync function getSecret(secretName: string): Promise<string> {\n  if (!_cachedSecrets.has(secretName)) {\n    const secretResponse = await _secretsClient.send(new GetSecretValueCommand({SecretId: secretName}));\n    if (secretResponse) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      _cachedSecrets.set(secretName, secretResponse.SecretString!);\n    } else {\n      throw new Error(`Unable to retrieve secret: ${secretName}`);\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return _cachedSecrets.get(secretName)!;\n}\n"}),"\n",(0,s.jsx)(n.h2,{id:"see-more",children:"See More"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"By integrating Momento topics, webhooks, and tokens, you can create secure and stateless asynchronous systems. This convention can be applied to a variety of use-cases such as multi-language chat app, online polling, and event-driven systems."}),"\n"]}),"\n","\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(a.V,{title:"Multi-language chat app",link:"https://github.com/momentohq/moderated-chat/",description:"Explore the source code of our live-translation chat app using webhooks."}),(0,s.jsx)(a.V,{title:"Use webhooks with API Gateway + Lambda",link:"https://www.gomomento.com/blog/how-to-use-webhooks-and-momento-topics-to-build-a-multi-language-chat-app",description:"Learn how to integrate Momento webhooks with Amazon API Gateway and Lambda functions"})]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},44788:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.__monkey_patch__=function(e,n){"types"===e?Object.assign(h,n):b[e]=n},n.attrs=a,n.legacyMerge=n.keyframes=n.include=n.firstThatWorks=n.defineVars=n.default=n.createTheme=n.create=void 0,n.props=i,n.types=void 0;var s=t(73176);const o=e=>new Error(`'stylex.${e}' should never be called at runtime. It should be compiled away by '@stylexjs/babel-plugin'`),r=e=>o(`types.${e}`);function i(){const e=this;for(var n=arguments.length,t=new Array(n),o=0;o<n;o++)t[o]=arguments[o];if(b.props)return b.props.call(e,t);const[r,i]=(0,s.styleq)(t),a={};return null!=r&&""!==r&&(a.className=r),null!=i&&Object.keys(i).length>0&&(a.style=i),a}function a(){const{className:e,style:n}=i(...arguments),t={};return null!=e&&""!==e&&(t.class=e),null!=n&&Object.keys(n).length>0&&(t.style=Object.keys(n).map((e=>`${e}:${n[e]};`)).join("")),t}const c=n.create=function(e){if(null!=b.create){return(0,b.create)(e)}throw o("create")},l=n.defineVars=function(e){if(b.defineVars)return b.defineVars(e);throw o("defineVars")},d=n.createTheme=(e,n)=>{if(b.createTheme)return b.createTheme(e,n);throw o("createTheme")},u=n.include=e=>{if(b.include)return b.include(e);throw o("include")},h=n.types={angle:e=>{throw r("angle")},color:e=>{throw r("color")},url:e=>{throw r("url")},image:e=>{throw r("image")},integer:e=>{throw r("integer")},lengthPercentage:e=>{throw r("lengthPercentage")},length:e=>{throw r("length")},percentage:e=>{throw r("percentage")},number:e=>{throw r("number")},resolution:e=>{throw r("resolution")},time:e=>{throw r("time")},transformFunction:e=>{throw r("transformFunction")},transformList:e=>{throw r("transformList")}},p=e=>{if(b.keyframes)return b.keyframes(e);throw o("keyframes")};n.keyframes=p;const m=function(){if(b.firstThatWorks)return b.firstThatWorks(...arguments);throw o("firstThatWorks")};function g(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];const[o]=(0,s.styleq)(n);return o}n.firstThatWorks=m,g.props=i,g.attrs=a,g.create=c,g.defineVars=l,g.createTheme=d,g.include=u,g.keyframes=p,g.firstThatWorks=m,g.types=h;const b={};n.legacyMerge=g;n.default=g},68254:(e,n,t)=>{"use strict";var s=t(6305).default;n.p=void 0;s(t(44788));var o=t(74848);n.p=e=>{let{variant:n,children:t}=e;return(0,o.jsx)("div",{...{0:{className:"xrvj5dj xoybqp3 x1p9eum2"},1:{className:"xrvj5dj xoybqp3 x1wlfl8j"}}[!("dense"!==n)|0],children:t})}},37206:(e,n,t)=>{"use strict";var s=t(6305).default;n.V=void 0;s(t(44788));var o=t(74848);n.V=e=>{let{title:n,description:t,link:s,icon:r,alignText:i="start",alignItems:a="start"}=e;return(0,o.jsxs)("a",{href:s,target:"_blank",...{0:{className:"x78zum5 xh8yej3 x1in32aq x1tamke2 x1q0g3np x7a106z xou54vl xqlwffn x12oqio5 x15ny4rc xokoxfd x1hl2dhg x1heor9g"},1:{className:"x78zum5 xh8yej3 x1in32aq x1tamke2 x1q0g3np xou54vl xqlwffn x12oqio5 x15ny4rc xokoxfd x1hl2dhg x1heor9g x6s0dn4"}}[!("center"!==a)|0],children:[r&&(0,o.jsx)("img",{src:r,height:"32px",width:"32px"}),(0,o.jsxs)("div",{...{0:{className:"x1iyjqo2 x1yc453h"},1:{className:"x1iyjqo2 x2b8uid"}}[!("center"!==i)|0],children:[(0,o.jsx)("h3",{className:"x1q12cbh",children:n}),(0,o.jsx)("p",{className:"xif65rj xo1l8bm x1du4iog",children:t})]})]})}},42821:(e,n,t)=>{"use strict";t(96540)},70503:(e,n,t)=>{"use strict";t.d(n,{F:()=>r});var s=t(21432),o=(t(96540),t(74848));const r=e=>{let{language:n,code:t}=e;return(0,o.jsx)(s.A,{language:n,children:t})}},73176:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.styleq=void 0;var t=new WeakMap;function s(e){var n,s,o;return null!=e&&(n=!0===e.disableCache,s=!0===e.disableMix,o=e.transform),function(){for(var e=[],r="",i=null,a=n?null:t,c=new Array(arguments.length),l=0;l<arguments.length;l++)c[l]=arguments[l];for(;c.length>0;){var d=c.pop();if(null!=d&&!1!==d)if(Array.isArray(d))for(var u=0;u<d.length;u++)c.push(d[u]);else{var h=null!=o?o(d):d;if(h.$$css){var p="";if(null!=a&&a.has(h)){var m=a.get(h);null!=m&&(p=m[0],e.push.apply(e,m[1]),a=m[2])}else{var g=[];for(var b in h){var f=h[b];"$$css"!==b&&("string"==typeof f||null===f?e.includes(b)||(e.push(b),null!=a&&g.push(b),"string"==typeof f&&(p+=p?" "+f:f)):console.error("styleq: ".concat(b," typeof ").concat(String(f),' is not "string" or "null".')))}if(null!=a){var y=new WeakMap;a.set(h,[p,g,y]),a=y}}p&&(r=r?p+" "+r:p)}else if(s)null==i&&(i={}),i=Object.assign({},h,i);else{var k=null;for(var w in h){var v=h[w];void 0!==v&&(e.includes(w)||(null!=v&&(null==i&&(i={}),null==k&&(k={}),k[w]=v),e.push(w),a=null))}null!=k&&(i=Object.assign(k,i))}}}return[r,i]}}var o=s();n.styleq=o,o.factory=s},34999:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});const s=t.p+"assets/images/token-id-webhook-06b7252991e86f2953c2aba0f917efbf.png"},6305:(e,n,t)=>{var s=t(73738).default;function o(e){if("function"!=typeof WeakMap)return null;var n=new WeakMap,t=new WeakMap;return(o=function(e){return e?t:n})(e)}e.exports=function(e,n){if(!n&&e&&e.__esModule)return e;if(null===e||"object"!=s(e)&&"function"!=typeof e)return{default:e};var t=o(n);if(t&&t.has(e))return t.get(e);var r={__proto__:null},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if("default"!==a&&{}.hasOwnProperty.call(e,a)){var c=i?Object.getOwnPropertyDescriptor(e,a):null;c&&(c.get||c.set)?Object.defineProperty(r,a,c):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r},e.exports.__esModule=!0,e.exports.default=e.exports},73738:e=>{function n(t){return e.exports=n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,n(t)}e.exports=n,e.exports.__esModule=!0,e.exports.default=e.exports}}]);