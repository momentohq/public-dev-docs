"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[7598],{79985:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var s=o(74848),t=o(28453),i=(o(51441),o(35347));const r={sidebar_position:20,title:"Momento tokens for short-lived, limited scope permissions",sidebar_label:"Tokens",description:"Learn what Momento tokens are, how to create them, and how they are used."},a="Momento tokens for short-lived permissions",l={id:"cache/develop/authentication/tokens",title:"Momento tokens for short-lived, limited scope permissions",description:"Learn what Momento tokens are, how to create them, and how they are used.",source:"@site/docs/cache/develop/authentication/tokens.md",sourceDirName:"cache/develop/authentication",slug:"/cache/develop/authentication/tokens",permalink:"/cache/develop/authentication/tokens",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/authentication/tokens.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Momento tokens for short-lived, limited scope permissions",sidebar_label:"Tokens",description:"Learn what Momento tokens are, how to create them, and how they are used."},sidebar:"cacheSidebar",previous:{title:"API Keys",permalink:"/cache/develop/authentication/api-keys"},next:{title:"Permissions",permalink:"/cache/develop/authentication/permissions"}},c={},p=[{value:"Creating a token",id:"creating-a-token",level:2},{value:"Expiration",id:"expiration",level:2},{value:"Use cases",id:"use-cases",level:2},{value:"Data restriction",id:"data-restriction",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"momento-tokens-for-short-lived-permissions",children:"Momento tokens for short-lived permissions"})}),"\n",(0,s.jsx)(n.p,{children:"Tokens are short-lived, limited-scope values intended to be used in temporary situations like a user's session. Software lifecycle events like a user login often result in the issuing of a token only valid for the duration of that session."}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Not sure if you should be using an ",(0,s.jsx)(n.code,{children:"API key"})," or a ",(0,s.jsx)(n.code,{children:"token"}),"? Check out our ",(0,s.jsx)(n.a,{href:"/cache/develop/authentication/",children:"authentication"})," page for all the details!"]})}),"\n",(0,s.jsx)(n.p,{children:"Tokens cannot be refreshed. So once it expires, it's gone forever. You'll be responsible for creating and issuing a new one if the session continues."}),"\n",(0,s.jsxs)(n.p,{children:["A Momento token allows access to ",(0,s.jsx)(n.em,{children:"data plane"})," API operations only. The user is unable to do ",(0,s.jsx)(n.em,{children:"control plane"})," operations like creating, deleting, or flushing a cache."]}),"\n",(0,s.jsx)(n.p,{children:"A user with a fully privileged token will be able to perform the following actions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add/edit/delete cache items in any cache"}),"\n",(0,s.jsx)(n.li,{children:"Publish and subscribe to any topic in any cache"}),"\n",(0,s.jsx)(n.li,{children:"Increment cache values via the increment API in any cache"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"It's up to you to limit the access of a token based on your system requirements."}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-token",children:"Creating a token"}),"\n",(0,s.jsxs)(n.p,{children:["Unlike our ",(0,s.jsx)(n.a,{href:"/cache/develop/authentication/api-keys",children:"API keys"}),", the only way to create a token is through code. You cannot create them through the Momento console."]}),"\n",(0,s.jsx)(n.p,{children:"Below are some examples to create tokens with different sets of permissions:"}),"\n",(0,s.jsx)(i.r,{js:"// Generate a disposable token with read-write access to a specific key in one cache\nconst oneKeyOneCacheToken = await authClient.generateDisposableToken(\n  DisposableTokenScopes.cacheKeyReadWrite('squirrels', 'mo'),\n  ExpiresIn.minutes(30)\n);\nswitch (oneKeyOneCacheToken.type) {\n  case GenerateDisposableTokenResponse.Success:\n    console.log('Generated a disposable API key with access to the \"mo\" key in the \"squirrels\" cache!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${oneKeyOneCacheToken.authToken.substring(0, 10)}`);\n    console.log(`Expires At: ${oneKeyOneCacheToken.expiresAt.epoch()}`);\n    break;\n  case GenerateDisposableTokenResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with disposable token scope: ${oneKeyOneCacheToken.errorCode()}: ${oneKeyOneCacheToken.toString()}`\n    );\n}\n\n// Generate a disposable token with read-write access to a specific key prefix in all caches\nconst keyPrefixAllCachesToken = await authClient.generateDisposableToken(\n  DisposableTokenScopes.cacheKeyPrefixReadWrite(AllCaches, 'squirrel'),\n  ExpiresIn.minutes(30)\n);\nswitch (keyPrefixAllCachesToken.type) {\n  case GenerateDisposableTokenResponse.Success:\n    console.log('Generated a disposable API key with access to keys prefixed with \"squirrel\" in all caches!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${keyPrefixAllCachesToken.authToken.substring(0, 10)}`);\n    console.log(`Expires At: ${keyPrefixAllCachesToken.expiresAt.epoch()}`);\n    break;\n  case GenerateDisposableTokenResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with disposable token scope: ${keyPrefixAllCachesToken.errorCode()}: ${keyPrefixAllCachesToken.toString()}`\n    );\n}\n\n// Generate a disposable token with read-only access to all topics in one cache\nconst allTopicsOneCacheToken = await authClient.generateDisposableToken(\n  TokenScopes.topicSubscribeOnly('squirrel', AllTopics),\n  ExpiresIn.minutes(30)\n);\nswitch (allTopicsOneCacheToken.type) {\n  case GenerateDisposableTokenResponse.Success:\n    console.log('Generated a disposable API key with access to all topics in the \"squirrel\" cache!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${allTopicsOneCacheToken.authToken.substring(0, 10)}`);\n    console.log(`Expires At: ${allTopicsOneCacheToken.expiresAt.epoch()}`);\n    break;\n  case GenerateDisposableTokenResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with disposable token scope: ${allTopicsOneCacheToken.errorCode()}: ${allTopicsOneCacheToken.toString()}`\n    );\n}\n\n// Generate a disposable token with write-only access to a single topic in all caches\nconst oneTopicAllCachesToken = await authClient.generateDisposableToken(\n  TokenScopes.topicPublishOnly(AllCaches, 'acorn'),\n  ExpiresIn.minutes(30)\n);\nswitch (oneTopicAllCachesToken.type) {\n  case GenerateDisposableTokenResponse.Success:\n    console.log('Generated a disposable API key with access to all topics in the \"squirrel\" cache!');\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\n    console.log(`API key starts with: ${oneTopicAllCachesToken.authToken.substring(0, 10)}`);\n    console.log(`Expires At: ${oneTopicAllCachesToken.expiresAt.epoch()}`);\n    break;\n  case GenerateDisposableTokenResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call generateApiKey with disposable token scope: ${oneTopicAllCachesToken.errorCode()}: ${oneTopicAllCachesToken.toString()}`\n    );\n}",python:'response = await auth_client.generate_disposable_token(\n    DisposableTokenScopes.topic_publish_subscribe("a-cache", "a-topic"),\n    ExpiresIn.minutes(5),\n    DisposableTokenProps(token_id="a-token-id"),\n)\nmatch response:\n    case GenerateDisposableToken.Success():\n        print("Successfully generated a disposable token")\n    case GenerateDisposableToken.Error() as error:\n        print(f"Error generating a disposable token: {error.message}")\n\n',java:'final GenerateDisposableTokenResponse response =\n    authClient\n        .generateDisposableTokenAsync(\n            DisposableTokenScopes.cacheKeyReadWrite("squirrel", "mo"), ExpiresIn.minutes(30))\n        .join();\nif (response instanceof GenerateDisposableTokenResponse.Success success) {\n  System.out.println("Successfully generated the disposable token: " + success.authToken());\n} else if (response instanceof GenerateDisposableTokenResponse.Error error) {\n  throw new RuntimeException(\n      "An error occurred while attempting to generate disposable token: "\n          + error.getErrorCode(),\n      error);\n}',kotlin:"",go:'tokenId := "a token id"\nresp, err := authClient.GenerateDisposableToken(ctx, &momento.GenerateDisposableTokenRequest{\n\tExpiresIn: utils.ExpiresInSeconds(10),\n\tScope: momento.TopicSubscribeOnly(\n\t\tmomento.CacheName{Name: "a cache"},\n\t\tmomento.TopicName{Name: "a topic"},\n\t),\n\tProps: momento.DisposableTokenProps{\n\t\tTokenId: &tokenId,\n\t},\n})\n\nif err != nil {\n\tpanic(err)\n}\n\nswitch r := resp.(type) {\ncase *auth_resp.GenerateDisposableTokenSuccess:\n\tlog.Printf("Successfully generated a disposable token for endpoint=%s with tokenId=%s\\n", r.Endpoint, tokenId)\n}',csharp:'// Generate a disposable token with read-write access to a specific key in one cache\r\nvar oneKeyOneCacheToken = await authClient.GenerateDisposableTokenAsync(\r\n    DisposableTokenScopes.CacheKeyReadWrite("squirrels", "mo"),\r\n    ExpiresIn.Minutes(30)\r\n);\r\n\nif (oneKeyOneCacheToken is GenerateDisposableTokenResponse.Success token1)\r\n{\r\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\r\n    Console.WriteLine("The generated disposable token starts with: " + token1.AuthToken.Substring(0, 10));\r\n    Console.WriteLine("The token expires at (epoch timestamp): " + token1.ExpiresAt.Epoch());\r\n}\r\nelse if (oneKeyOneCacheToken is GenerateDisposableTokenResponse.Error err)\r\n{\r\n    Console.WriteLine("Error generating disposable token: " + err.Message);\r\n}\r\n\n// Generate a disposable token with read-write access to a specific key prefix in all caches\r\nvar keyPrefixAllCachesToken = await authClient.GenerateDisposableTokenAsync(\r\n    DisposableTokenScopes.CacheKeyPrefixReadWrite(CacheSelector.AllCaches, "squirrel"),\r\n    ExpiresIn.Minutes(30)\r\n);\r\n\nif (keyPrefixAllCachesToken is GenerateDisposableTokenResponse.Success token2)\r\n{\r\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\r\n    Console.WriteLine("The generated disposable token starts with: " + token2.AuthToken.Substring(0, 10));\r\n    Console.WriteLine("The token expires at (epoch timestamp): " + token2.ExpiresAt.Epoch());\r\n}\r\nelse if (keyPrefixAllCachesToken is GenerateDisposableTokenResponse.Error err)\r\n{\r\n    Console.WriteLine("Error generating disposable token: " + err.Message);\r\n}\r\n\n// Generate a disposable token with read-only access to all topics in one cache\r\nvar allTopicsOneCacheToken = await authClient.GenerateDisposableTokenAsync(\r\n    DisposableTokenScopes.TopicSubscribeOnly("squirrel", TopicSelector.AllTopics),\r\n    ExpiresIn.Minutes(30)\r\n);\r\n\nif (allTopicsOneCacheToken is GenerateDisposableTokenResponse.Success token3)\r\n{\r\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\r\n    Console.WriteLine("The generated disposable token starts with: " + token3.AuthToken.Substring(0, 10));\r\n    Console.WriteLine("The token expires at (epoch timestamp): " + token3.ExpiresAt.Epoch());\r\n}\r\nelse if (allTopicsOneCacheToken is GenerateDisposableTokenResponse.Error err)\r\n{\r\n    Console.WriteLine("Error generating disposable token: " + err.Message);\r\n}\r\n\n// Generate a disposable token with write-only access to a single topic in all caches\r\nvar oneTopicAllCachesToken = await authClient.GenerateDisposableTokenAsync(\r\n    DisposableTokenScopes.TopicPublishOnly(CacheSelector.AllCaches, "acorn"),\r\n    ExpiresIn.Minutes(30)\r\n);\r\n\nif (oneTopicAllCachesToken is GenerateDisposableTokenResponse.Success token4)\r\n{\r\n    // logging only a substring of the tokens, because logging security credentials is not advisable :)\r\n    Console.WriteLine("The generated disposable token starts with: " + token4.AuthToken.Substring(0, 10));\r\n    Console.WriteLine("The token expires at (epoch timestamp): " + token4.ExpiresAt.Epoch());\r\n}\r\nelse if (oneTopicAllCachesToken is GenerateDisposableTokenResponse.Error err)\r\n{\r\n    Console.WriteLine("Error generating disposable token: " + err.Message);\r\n}\r\n',php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,s.jsxs)(n.p,{children:["For detailed information on creating a token, please refer to the ",(0,s.jsx)(n.a,{href:"/cache/develop/api-reference/auth",children:"API reference page"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"expiration",children:"Expiration"}),"\n",(0,s.jsxs)(n.p,{children:["Momento tokens are required to have an expiration time. The ",(0,s.jsx)(n.strong,{children:"maximum expiration time for a token is 1 hour"}),". When the token expiration time elapses, you will be required to create a new one."]}),"\n",(0,s.jsxs)(n.p,{children:["If you attempt to make a call with an expired token, you will receive a ",(0,s.jsx)(n.code,{children:"AUTHENTICATION_ERROR"})," response indicating the provided credentials could not connect to the service."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Tokens cannot be refreshed. So once it expires, it's gone forever. You'll be responsible for creating and issuing a new one if the session continues."})}),"\n",(0,s.jsx)(n.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,s.jsx)(n.p,{children:"These tokens are a great fit for the following use cases:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Using Momento for front-end development"}),"\n",(0,s.jsx)(n.li,{children:"Communicating with IoT devices"}),"\n",(0,s.jsx)(n.li,{children:"Issuing temporary access to specific resources"}),"\n",(0,s.jsx)(n.li,{children:"Providing credentials to users on login"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"data-restriction",children:"Data restriction"}),"\n",(0,s.jsxs)(n.p,{children:["A common use case for a token is to limit access to only a small subset of resources. Not only can you limit capabilities, like providing a token with ",(0,s.jsx)(n.em,{children:"read-only"})," access, but you can also scope it to individual cache items or topics."]}),"\n",(0,s.jsxs)(n.p,{children:["To get a full understanding of what you can do with data restriction, check out our ",(0,s.jsx)(n.a,{href:"/cache/develop/authentication/permissions",children:"permissions page"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},51441:(e,n,o)=>{o(96540)},35347:(e,n,o)=>{o.d(n,{r:()=>f});var s=o(11470),t=o(19365),i=o(21432),r=(o(96540),o(27293)),a=o(74848);const l="https://github.com/momentohq/client-sdk-javascript/blob/main/examples/nodejs/cache/doc-example-files/doc-examples-js-apis.ts",c="https://github.com/momentohq/client-sdk-python/blob/main/examples/py310/doc-examples-python-apis.py",p="https://github.com/momentohq/client-sdk-java/blob/main/examples/cache/src/main/java/momento/client/example/doc_examples/DocExamplesJavaAPIs.java",h="https://github.com/momentohq/client-sdk-kotlin/blob/main/examples/src/main/kotlin/software/momento/example/doc_examples/DocExamples.kt",d="https://github.com/momentohq/client-sdk-go/blob/main/examples/docs-examples/main.go",u="https://github.com/momentohq/client-sdk-dotnet/blob/main/examples/DocExampleApis/Program.cs",k="https://github.com/momentohq/client-sdk-php/blob/main/examples/doc-examples-php-apis.php",m="https://github.com/momentohq/client-sdk-rust/blob/main/example/rust/src/docs_examples/docs_examples.rs",b="https://github.com/momentohq/client-sdk-elixir/blob/main/examples/doc_examples.exs",g="https://github.com/momentohq/client-sdk-swift/blob/main/Examples/doc-example-apis/Sources/main.swift",x="https://github.com/momentohq/client-sdk-dart/blob/main/example/doc_example_apis/bin/doc_example_apis.dart",f=e=>{let{js:n,python:o,java:f,kotlin:y,go:T,csharp:A,php:j,rust:w,ruby:v,elixir:C,swift:E,dart:D,cli:S}=e;return n||o||f||y||T||A||j||w||v||C||E||D||S?(0,a.jsxs)(s.A,{children:[n&&(0,a.jsxs)(t.A,{value:"js",label:"JavaScript",children:[(0,a.jsx)(i.A,{language:"js",children:n}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:l,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),o&&(0,a.jsxs)(t.A,{value:"python",label:"Python",children:[(0,a.jsx)(i.A,{language:"python",children:o}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:c,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),f&&(0,a.jsxs)(t.A,{value:"java",label:"Java",children:[(0,a.jsx)(i.A,{language:"java",children:f}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:p,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),y&&(0,a.jsxs)(t.A,{value:"kotlin",label:"Kotlin",children:[(0,a.jsx)(i.A,{language:"kotlin",children:y}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:h,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),T&&(0,a.jsxs)(t.A,{value:"go",label:"Go",children:[(0,a.jsx)(i.A,{language:"go",children:T}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:d,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),A&&(0,a.jsxs)(t.A,{value:"csharp",label:"C#",children:[(0,a.jsx)(i.A,{language:"csharp",children:A}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:u,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),j&&(0,a.jsxs)(t.A,{value:"php",label:"PHP",children:[(0,a.jsx)(i.A,{language:"php",children:j}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:k,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),w&&(0,a.jsxs)(t.A,{value:"rust",label:"Rust",children:[(0,a.jsx)(i.A,{language:"rust",children:w}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:m,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),v&&(0,a.jsx)(t.A,{value:"ruby",label:"Ruby",children:(0,a.jsx)(i.A,{language:"ruby",children:v})}),C&&(0,a.jsxs)(t.A,{value:"elixir",label:"Elixir",children:[(0,a.jsx)(i.A,{language:"elixir",children:C}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:b,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),E&&(0,a.jsxs)(t.A,{value:"swift",label:"Swift",children:[(0,a.jsx)(i.A,{language:"swift",children:E}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:g,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),D&&(0,a.jsxs)(t.A,{value:"dart",label:"Dart",children:[(0,a.jsx)(i.A,{language:"dart",children:D}),(0,a.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,a.jsx)("a",{href:x,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),S&&(0,a.jsx)(t.A,{value:"cli",label:"CLI",children:(0,a.jsx)(i.A,{language:"cli",children:S})})]}):null}}}]);