"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[5230],{64407:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var t=n(74848),i=n(28453);const r={sidebar_position:50,sidebar_label:"Momento Proxy",title:"Momento Proxy",description:"Learn how to use Momento Proxy as a drop-in replacement for Memcached with no code changes."},a="Momento Proxy",s={id:"cache/proxy/index",title:"Momento Proxy",description:"Learn how to use Momento Proxy as a drop-in replacement for Memcached with no code changes.",source:"@site/docs/cache/proxy/index.md",sourceDirName:"cache/proxy",slug:"/cache/proxy/",permalink:"/cache/proxy/",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/proxy/index.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,sidebar_label:"Momento Proxy",title:"Momento Proxy",description:"Learn how to use Momento Proxy as a drop-in replacement for Memcached with no code changes."},sidebar:"cacheSidebar",previous:{title:"Terraform",permalink:"/cache/integrations/terraform"},next:{title:"Configuration",permalink:"/cache/proxy/configuration/"}},c={},d=[{value:"Key benefits",id:"key-benefits",level:3},{value:"How it works",id:"how-it-works",level:2},{value:"Under the hood",id:"under-the-hood",level:3},{value:"Roadmap",id:"roadmap",level:2},{value:"Local caching in the proxy",id:"local-caching-in-the-proxy",level:3},{value:"SSD-based caching",id:"ssd-based-caching",level:3}];function l(e){const o={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"momento-proxy",children:"Momento Proxy"})}),"\n",(0,t.jsxs)(o.p,{children:["Momento Proxy is a lightweight drop-in replacement for ",(0,t.jsx)(o.a,{href:"https://memcached.org/",children:"Memcached"})," that lets you use Momento Cache ",(0,t.jsx)(o.em,{children:"without changing your application code"}),". This proxy enables Memcached-compatible applications to instantly benefit from Momento's scalable, enterprise-grade caching platform."]}),"\n",(0,t.jsxs)(o.p,{children:["For teams maintaining Memcached-based applications, switching cache providers typically means rewriting application code. Momento Proxy removes that barrier. By acting as a local intermediary, it translates standard Memcached commands (",(0,t.jsx)(o.code,{children:"get"})," and ",(0,t.jsx)(o.code,{children:"set"}),") into ",(0,t.jsx)(o.a,{href:"/cache/develop/api-reference#data-apis",children:"Momento Cache operations"}),", so your system can start using Momento immediately\u2014without a single code change, minimizing your time and effort to get to production."]}),"\n",(0,t.jsx)(o.admonition,{type:"tip",children:(0,t.jsxs)(o.p,{children:["To keep your code running as fast as possible, run Momento Proxy as a ",(0,t.jsx)(o.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/",children:"sidecar"})," in your environment to avoid the latency of an extra network hop! A sidecar container can be accessed over ",(0,t.jsx)(o.code,{children:"localhost"})," on a port of your choice, resulting in the fastest possible execution without additional code changes. ",(0,t.jsx)(o.a,{href:"/cache/proxy/configuration/sidecar",children:"Learn how to set up Momento Proxy as a sidecar with Memcached"}),"."]})}),"\n",(0,t.jsx)(o.h3,{id:"key-benefits",children:"Key benefits"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Zero code changes"})," \u2014 Simply run the proxy locally and redirect your caching traffic to it."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Language agnostic"})," \u2014 Works with any Memcached-compatible client, including Java, Python, Go, and more."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Lightweight and fast"})," \u2014 Built in Rust for performance and low memory overhead."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Operational visibility"})," \u2014 Exposes real-time runtime statistics via the Memcached stats command on a dedicated admin port."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Command auditing"})," \u2014 Logs cache operations to support audit trails and offline workload analysis."]}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,t.jsxs)(o.p,{children:["Once configured, Momento Proxy listens on the same ports used by Memcached and forwards incoming ",(0,t.jsx)(o.code,{children:"get"}),"/",(0,t.jsx)(o.code,{children:"set"})," requests to the appropriate Momento Cache. You simply set your application to talk to ",(0,t.jsx)(o.code,{children:"localhost"})," instead of a remote Memcached endpoint."]}),"\n",(0,t.jsx)(o.mermaid,{value:"sequenceDiagram\n    participant App as Your Application\n    participant Proxy as Momento Proxy (localhost)\n    participant Momento as Momento Cache\n\n    App->>Proxy: set foo bar\n    Proxy->>Momento: set foo bar\n    Momento--\x3e>Proxy: STORED\n    Proxy--\x3e>App: STORED\n\n    App->>Proxy: get foo\n    Proxy->>Momento: get foo\n    Momento--\x3e>Proxy: VALUE foo bar\n    Proxy--\x3e>App: VALUE foo bar"}),"\n",(0,t.jsx)(o.p,{children:"This sequence diagram shows the lifecycle of a typical set and get operation when using Momento Proxy. Your application sends compatible commands to the proxy running on localhost. The proxy translates and securely forwards these requests to the Momento Cache service using your API key. Responses are translated back into the expected protocol format before being returned to your application."}),"\n",(0,t.jsx)(o.h3,{id:"under-the-hood",children:"Under the hood"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Authentication"})," \u2014 All requests are authenticated using your Momento API key."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Configuration"})," \u2014 A TOML config file specifies which ports the proxy listens on and which caches it connects to."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Translation"})," \u2014 The proxy parses incoming Memcached commands, translates them into Momento API calls, and formats the responses accordingly."]}),"\n",(0,t.jsxs)(o.li,{children:[(0,t.jsx)(o.strong,{children:"Diagnostics"})," \u2014 An admin port is exposed for runtime statistics and operational visibility."]}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"roadmap",children:"Roadmap"}),"\n",(0,t.jsx)(o.p,{children:"Momento Proxy will continue to get better and faster. Future improvements are coming soon and include:"}),"\n",(0,t.jsx)(o.h3,{id:"local-caching-in-the-proxy",children:"Local caching in the proxy"}),"\n",(0,t.jsx)(o.p,{children:"To reduce latency even further, we're adding a local in-memory cache layer to Momento Proxy. This will allow frequently accessed items to be served directly from the proxy without needing a round trip to Momento Cache."}),"\n",(0,t.jsx)(o.h3,{id:"ssd-based-caching",children:"SSD-based caching"}),"\n",(0,t.jsx)(o.p,{children:"Also planned is support for SSD-backed caching inside the proxy. This allows for much larger working sets to be cached locally\u2014beyond what fits in memory\u2014without requiring upstream calls for less frequently accessed data. It is especially useful for read-heavy workloads or applications with long-tail access patterns, where latency consistency and cache efficiency matter."}),"\n",(0,t.jsx)(o.hr,{}),"\n",(0,t.jsxs)(o.p,{children:["Ready to get started? Head over to the ",(0,t.jsx)(o.a,{href:"/cache/proxy/configuration",children:"configuration page"})," to launch Momento Proxy in your environment."]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>s});var t=n(96540);const i={},r=t.createContext(i);function a(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);