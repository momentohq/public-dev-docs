"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[9162],{8499:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var s=n(74848),a=n(28453),t=(n(51441),n(35347));const l={sidebar_position:2,sidebar_label:"API Reference",title:"Leaderboards API reference",description:"Learn how to interact programmatically with the Momento Leaderboards API.",hide_table_of_contents:!1},o="Using Momento Leaderboards",d={id:"leaderboards/api-reference/index",title:"Leaderboards API reference",description:"Learn how to interact programmatically with the Momento Leaderboards API.",source:"@site/docs/leaderboards/api-reference/index.mdx",sourceDirName:"leaderboards/api-reference",slug:"/leaderboards/api-reference/",permalink:"/leaderboards/api-reference/",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/leaderboards/api-reference/index.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"API Reference",title:"Leaderboards API reference",description:"Learn how to interact programmatically with the Momento Leaderboards API.",hide_table_of_contents:!1},sidebar:"leaderboardSidebar",previous:{title:"Overview",permalink:"/leaderboards/"},next:{title:"Auth",permalink:"/leaderboards/api-reference/auth"}},i={},c=[{value:"Leaderboard Client Methods",id:"leaderboard-client-methods",level:2},{value:"Create Leaderboard Client",id:"create-leaderboard-client",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Create a Leaderboard",id:"create-a-leaderboard",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Leaderboard Methods",id:"leaderboard-methods",level:2},{value:"Upsert elements",id:"upsert-elements",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Fetch elements by score",id:"fetch-elements-by-score",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Optional Parameters",id:"optional-parameters",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Fetch elements by rank",id:"fetch-elements-by-rank",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Optional Parameters",id:"optional-parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Fetch elements by ID",id:"fetch-elements-by-id",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Optional Parameters",id:"optional-parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Get leaderboard length",id:"get-leaderboard-length",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Remove elements",id:"remove-elements",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Delete leaderboard",id:"delete-leaderboard",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4}];function h(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"using-momento-leaderboards",children:"Using Momento Leaderboards"})}),"\n",(0,s.jsx)(r.p,{children:"Momento Leaderboards is a first-class service with purpose-built APIs that supports leaderboards with tens of millions of items and rapid ingestion/querying/updates."}),"\n",(0,s.jsx)(r.h2,{id:"leaderboard-client-methods",children:"Leaderboard Client Methods"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"create-leaderboard-client",children:"Create Leaderboard Client"}),(0,s.jsx)(r.p,{children:"To create and interact with leaderboards, you must first create a LeaderboardClient."}),(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"configuration"})," - ",(0,s.jsx)(r.em,{children:"LeaderboardConfiguration"}),": Options for configuring your leaderboard client. For more information, see ",(0,s.jsx)(r.a,{href:"/cache/develop/basics/client-configuration-objects",children:"SDK Configuration Objects"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"credentialProvider"})," - ",(0,s.jsx)(r.em,{children:"CredentialProvider"}),": See ",(0,s.jsx)(r.a,{href:"/cache/develop#instantiating-credential-providers-using-momento-api-keys",children:"Instantiating CredentialProviders"})," for more information on using your Momento API key."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"PreviewLeaderboardClient object capable of creating new leaderboards and interacting with existing ones."}),"\n"]})]}),(0,s.jsx)("div",{class:"col col--8",children:(0,s.jsx)(t.r,{js:"new PreviewLeaderboardClient({\n  configuration: LeaderboardConfigurations.Laptop.v1(),\n  credentialProvider: CredentialProvider.fromEnvironmentVariable('MOMENTO_API_KEY'),\n});",python:"",java:"",kotlin:"",go:'credentialProvider, err := auth.NewEnvMomentoTokenProvider("MOMENTO_API_KEY")\nif err != nil {\n\tpanic(err)\n}\n\nleaderboardClient, err = momento.NewPreviewLeaderboardClient(\n\tconfig.LeaderboardDefault(),\n\tcredentialProvider,\n)\nif err != nil {\n\tpanic(err)\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"create-a-leaderboard",children:"Create a Leaderboard"}),(0,s.jsx)(r.p,{children:"Use a LeaderboardClient to create a leaderboard by specifying a cache and leaderboard name."}),(0,s.jsx)(r.h4,{id:"parameters-1",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"cacheName"})," - ",(0,s.jsx)(r.em,{children:"string"}),": Which cache to create the leaderboard in."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"leaderboardName"})," - ",(0,s.jsx)(r.em,{children:"string"}),": What to name the leaderboard."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-1",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["Leaderboard object or ",(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"Error"})]}),"\n"]})]}),(0,s.jsx)("div",{class:"col col--8",children:(0,s.jsx)(t.r,{js:"// You can create multiple leaderboards using the same leaderboard client\n// but with different cache and leaderboard names\nleaderboardClient.leaderboard(cacheName, 'momento-leaderboard');\nleaderboardClient.leaderboard(cacheName, 'acorns-leaderboard');\n\n// Leaderboard and cache names must be non-empty strings\ntry {\n  leaderboardClient.leaderboard(cacheName, '   ');\n} catch (error) {\n  console.log('Expected error creating a leaderboard with invalid leaderboard name:', error);\n}",python:"",java:"",kotlin:"",go:'leaderboard, err = leaderboardClient.Leaderboard(ctx, &momento.LeaderboardRequest{\n\tCacheName:       cacheName,\n\tLeaderboardName: "leaderboard",\n})\nif err != nil {\n\tpanic(err)\n}\nreturn leaderboard',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"leaderboard-methods",children:"Leaderboard Methods"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"upsert-elements",children:"Upsert elements"}),(0,s.jsx)(r.p,{children:"Inserts elements if they do not already exist in the leaderboard. Updates elements if they do already exist in the leaderboard. There are no partial failures; an upsert call will either succeed or fail."}),(0,s.jsx)(r.h4,{id:"parameters-2",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"elements"})," - ",(0,s.jsx)(r.em,{children:"Dictionary"}),": Dictionary of (id, score) pairs to upsert."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"id: integer"}),"\n",(0,s.jsx)(r.li,{children:"score: double"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"The id can be a player identifier, session identifier, browser identifier or any other kind of identifier you want to use for this scoreboard. The full unsigned 64 bit range is allowed here, between 0 and 2^63-1 inclusive."}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"An id can only appear in a leaderboard one time, meaning you can't have two scores for one player unless that player has two ids!"}),"\n"]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-2",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardUpsert.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardUpsert.Error"})}),"\n"]})]}),(0,s.jsxs)("div",{class:"col col--8",children:[(0,s.jsx)(t.r,{js:"// Upsert a set of elements as a Map\nconst elements1: Map<number, number> = new Map([\n  [123, 100.0],\n  [234, 200.0],\n  [345, 300.0],\n  [456, 400.0],\n]);\nconst result1 = await leaderboard.upsert(elements1);\nswitch (result1.type) {\n  case LeaderboardUpsertResponse.Success:\n    console.log('Successfully upserted elements to leaderboard');\n    break;\n  case LeaderboardUpsertResponse.Error:\n    console.log('Upsert error:', result1.message());\n    throw new Error(\n      `An error occurred while attempting to call upsert on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result1.errorCode()}: ${result1.message()}`\n    );\n}\n\n// Or upsert a set of elements as a Record\nconst elements2: Record<number, number> = {\n  567: 500,\n  678: 600,\n  789: 700,\n  890: 800,\n};\nconst result2 = await leaderboard.upsert(elements2);\nswitch (result2.type) {\n  case LeaderboardUpsertResponse.Success:\n    console.log('Successfully upserted elements to leaderboard');\n    break;\n  case LeaderboardUpsertResponse.Error:\n    console.log('Upsert error:', result2.message());\n    throw new Error(\n      `An error occurred while attempting to call upsert on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result2.errorCode()}: ${result2.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:"upsertElements := []momento.LeaderboardUpsertElement{\n\t{Id: 123, Score: 10.33},\n\t{Id: 456, Score: 3333},\n\t{Id: 789, Score: 5678.9},\n}\n_, err := leaderboard.Upsert(ctx, momento.LeaderboardUpsertRequest{Elements: upsertElements})\nif err != nil {\n\tpanic(err)\n}",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"Upsert is implemented as a batched operation, so for large leaderboards, you can upsert in batches of up to 8192 elements. "}),(0,s.jsx)(t.r,{js:"// To upsert a large number of elements, you must upsert\n// in batches of up to 8192 elements at a time.\n// This example shows how to paginate for a large value of `totalNumElements`, such as `20000`.\nconst elements = [...Array(totalNumElements).keys()].map(i => {\n  return {id: i + 1, score: i * Math.random()};\n});\nfor (let i = 0; i < totalNumElements; i += 8192) {\n  // Create a Map containing 8192 elements at a time\n  const batch = new Map(elements.slice(i, i + 8192).map(obj => [obj['id'], obj['score']]));\n\n  // Then upsert one batch at a time until all elements have been ingested\n  const result = await leaderboard.upsert(batch);\n  switch (result.type) {\n    case LeaderboardUpsertResponse.Success:\n      break;\n    case LeaderboardUpsertResponse.Error:\n      console.log(`Error upserting batch [${i}, ${i + 8192})`);\n      break;\n  }\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"fetch-elements-by-score",children:"Fetch elements by score"}),(0,s.jsx)(r.p,{children:"Fetches elements that fall within the specified min and max scores."}),(0,s.jsx)(r.p,{children:"Elements with the same score will be returned in alphanumerical order based on their ID (e.g. IDs of elements with the same score would be returned in the order [1, 10, 123, 2, 234, ...] rather than [1, 2, 10, 123, 234, ...])."}),(0,s.jsx)(r.h4,{id:"parameters-3",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.h4,{id:"optional-parameters",children:"Optional Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"minScore"})," - ",(0,s.jsx)(r.em,{children:"double"}),": Inclusive lower bound for the score range. Defaults to ",(0,s.jsx)(r.code,{children:"-inf"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"maxScore"})," - ",(0,s.jsx)(r.em,{children:"double"}),": Exclusive upper bound for the score range. Defaults to ",(0,s.jsx)(r.code,{children:"+inf"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"order"})," - ",(0,s.jsx)(r.em,{children:"LeaderboardOrder enum"}),": The order to fetch the elements in. Defaults to ascending, meaning 0 is the lowest-scoring rank."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"offset"})," - ",(0,s.jsx)(r.em,{children:"integer"}),": The number of elements to skip before returning the first element. Defaults to 0."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"count"})," - ",(0,s.jsx)(r.em,{children:"integer"}),": The maximum number of elements to return. Defaults to 8192."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-3",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardFetch.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardFetch.Error"})}),"\n"]})]}),(0,s.jsxs)("div",{class:"col col--8",children:[(0,s.jsx)(t.r,{js:"// By default, FetchByScore will fetch the elements from the entire score range\n// with zero offset in ascending order. It can return 8192 elements at a time.\nconst result1 = await leaderboard.fetchByScore();\nswitch (result1.type) {\n  case LeaderboardFetchResponse.Success:\n    console.log('Successfully fetched elements using open score range:');\n    result1.values().forEach(element => {\n      console.log(`\\tId: ${element.id} | Rank: ${element.rank} | Score: ${element.score}`);\n    });\n    break;\n  case LeaderboardFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call fetchByScore with no options on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result1.errorCode()}: ${result1.message()}`\n    );\n}\n\n// Example specifying all FetchByScore options. You can provide any subset of these options\n// to modify your FetchByScore request.\nconst result2 = await leaderboard.fetchByScore({\n  minScore: 10,\n  maxScore: 600,\n  order: LeaderboardOrder.Descending,\n  offset: 2,\n  count: 10,\n});\nswitch (result2.type) {\n  case LeaderboardFetchResponse.Success:\n    console.log('Successfully fetched elements by score using all options:');\n    result2.values().forEach(element => {\n      console.log(`\\tId: ${element.id} | Rank: ${element.rank} | Score: ${element.score}`);\n    });\n    break;\n  case LeaderboardFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call fetchByScore with all options on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result2.errorCode()}: ${result2.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:'minScore := 150.0\nmaxScore := 3000.0\noffset := uint32(1)\ncount := uint32(2)\nfetchOrder := momento.ASCENDING\nfetchByScoreResponse, err := leaderboard.FetchByScore(ctx, momento.LeaderboardFetchByScoreRequest{\n\tMinScore: &minScore,\n\tMaxScore: &maxScore,\n\tOffset:   &offset,\n\tCount:    &count,\n\tOrder:    &fetchOrder,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := fetchByScoreResponse.(type) {\ncase *responses.LeaderboardFetchSuccess:\n\tfmt.Printf("Successfully fetched elements by score:\\n")\n\tfor _, element := range r.Values() {\n\t\tfmt.Printf("ID: %d, Score: %f, Rank: %d\\n", element.Id, element.Score, element.Rank)\n\t}\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"FetchByScore is implemented as a batch operation, so for large leaderboards, you can fetch in batches of up to 8192 elements."}),(0,s.jsxs)(r.p,{children:["You can page through multiple elements that fall within the requested score range using the ",(0,s.jsx)(r.code,{children:"offset"})," parameter until you receive an empty list, which indicates the end of the requested elements."]}),(0,s.jsx)(t.r,{js:"// Use the offset option to paginate through your results if your leaderboard\n// has more than 8192 elements.\n// This example shows how to paginate for a large value of `totalNumElements`, such as `20000`.\nfor (let offset = 0; offset < totalNumElements; offset += 8192) {\n  const result = await leaderboard.fetchByScore({offset});\n  switch (result.type) {\n    case LeaderboardFetchResponse.Success:\n      processBatch(result.values());\n      break;\n    case LeaderboardFetchResponse.Error:\n      console.log(\n        `Error fetching batch by score [${offset}, ${offset + 8192}) (${result.errorCode()}: ${result.message()})`\n      );\n  }\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"fetch-elements-by-rank",children:"Fetch elements by rank"}),(0,s.jsx)(r.p,{children:"Fetches elements that fall within the specified min and max ranks."}),(0,s.jsx)(r.h4,{id:"parameters-4",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"startRank"})," - ",(0,s.jsx)(r.em,{children:"integer"}),": Inclusive lower bound for the rank range. Defaults to 0."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"endRank"})," - ",(0,s.jsx)(r.em,{children:"integer"}),": Exclusive upper bound for the rank range. Defaults to ",(0,s.jsx)(r.code,{children:"startRank"})," + 8192."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"optional-parameters-1",children:"Optional Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"order"})," - ",(0,s.jsx)(r.em,{children:"LeaderboardOrder enum"}),": The order to fetch the elements in. Defaults to ascending, meaning 0 is the lowest-scoring rank."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-4",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardFetch.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardFetch.Error"})}),"\n"]})]}),(0,s.jsxs)("div",{class:"col col--8",children:[(0,s.jsx)(t.r,{js:"// By default, FetchByRank will fetch the elements in the range [startRank, endRank)\n// in ascending order, meaning rank 0 is for the lowest score.\nconst result1 = await leaderboard.fetchByRank(0, 10);\nswitch (result1.type) {\n  case LeaderboardFetchResponse.Success:\n    console.log('Successfully fetched elements in rank range [0,10)');\n    result1.values().forEach(element => {\n      console.log(`\\tId: ${element.id} | Rank: ${element.rank} | Score: ${element.score}`);\n    });\n    break;\n  case LeaderboardFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call fetchByRank with no options on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result1.errorCode()}: ${result1.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:'fetchOrder := momento.ASCENDING\nfetchByRankResponse, err := leaderboard.FetchByRank(ctx, momento.LeaderboardFetchByRankRequest{\n\tStartRank: 0,\n\tEndRank:   100,\n\tOrder:     &fetchOrder,\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := fetchByRankResponse.(type) {\ncase *responses.LeaderboardFetchSuccess:\n\tfmt.Printf("Successfully fetched elements by rank:\\n")\n\tfor _, element := range r.Values() {\n\t\tfmt.Printf("ID: %d, Score: %f, Rank: %d\\n", element.Id, element.Score, element.Rank)\n\t}\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"For large leaderboards, you will need to fetch in batches of up to 8192 elements."}),(0,s.jsx)(t.r,{js:"// Use the startRank and endRank options to paginate through your leaderboard\n// if your leaderboard has more than 8192 elements\n// This example shows how to paginate for a large value of `totalNumElements`, such as `20000`.\nfor (let rank = 0; rank < totalNumElements; rank += 8192) {\n  const result = await leaderboard.fetchByRank(rank, rank + 8192, {order: LeaderboardOrder.Descending});\n  switch (result.type) {\n    case LeaderboardFetchResponse.Success:\n      processBatch(result.values());\n      break;\n    case LeaderboardFetchResponse.Error:\n      console.log(\n        `Error fetching batch by rank [${rank}, ${rank + 8192}) (${result.errorCode()}: ${result.message()})`\n      );\n  }\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"fetch-elements-by-id",children:"Fetch elements by ID"}),(0,s.jsx)(r.p,{children:"Fetches elements given a list of element IDs."}),(0,s.jsx)(r.h4,{id:"parameters-5",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"ids"})," - ",(0,s.jsx)(r.em,{children:"List"}),": List of integers representing the ids of the elements to fetch."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"optional-parameters-2",children:"Optional Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"order"})," - ",(0,s.jsx)(r.em,{children:"LeaderboardOrder enum"}),": The order to fetch the elements in. Defaults to ascending, meaning 0 is the lowest-scoring rank."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-5",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardFetch.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardFetch.Error"})}),"\n"]})]}),(0,s.jsx)("div",{class:"col col--8",children:(0,s.jsx)(t.r,{js:"// Provide a list of element IDs to get their ranks in ascending or descending order\nconst result = await leaderboard.getRank([123, 456, 789], {\n  order: LeaderboardOrder.Descending,\n});\nswitch (result.type) {\n  case LeaderboardFetchResponse.Success:\n    console.log('Successfully fetched the rank of 3 elements:');\n    result.values().forEach(element => {\n      console.log(`\\tId: ${element.id} | Rank: ${element.rank} | Score: ${element.score}`);\n    });\n    break;\n  case LeaderboardFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call getRank on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result.errorCode()}: ${result.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:'getRankResponse, err := leaderboard.GetRank(ctx, momento.LeaderboardGetRankRequest{\n\tIds: []uint32{123, 456},\n})\nif err != nil {\n\tpanic(err)\n}\nswitch r := getRankResponse.(type) {\ncase *responses.LeaderboardFetchSuccess:\n\tfmt.Printf("Successfully fetched elements by ID:\\n")\n\tfor _, element := range r.Values() {\n\t\tfmt.Printf("ID: %d, Score: %f, Rank: %d\\n", element.Id, element.Score, element.Rank)\n\t}\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"get-leaderboard-length",children:"Get leaderboard length"}),(0,s.jsxs)(r.p,{children:["Gets the number of entries in the leaderboard. The leaderboard name is inferred from the ",(0,s.jsx)(r.code,{children:"Leaderboard"})," object."]}),(0,s.jsx)(r.h4,{id:"parameters-6",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.h4,{id:"returns-6",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardLength.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardLength.Error"})}),"\n"]})]}),(0,s.jsx)("div",{class:"col col--8",children:(0,s.jsx)(t.r,{js:"const result = await leaderboard.length();\nswitch (result.type) {\n  case LeaderboardLengthResponse.Success:\n    console.log('Successfully retrieved leaderboard length:', result.length());\n    break;\n  case LeaderboardLengthResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call length on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result.errorCode()}: ${result.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:'lengthResponse, err := leaderboard.Length(ctx)\nif err != nil {\n\tpanic(err)\n}\nswitch r := lengthResponse.(type) {\ncase *responses.LeaderboardLengthSuccess:\n\tfmt.Printf("Leaderboard length: %d\\n", r.Length())\n}',csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"remove-elements",children:"Remove elements"}),(0,s.jsx)(r.p,{children:"Removes elements with the specified IDs."}),(0,s.jsx)(r.h4,{id:"parameters-7",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"ids"})," - ",(0,s.jsx)(r.em,{children:"List"}),": A list of ids for the elements you want to remove."]}),"\n"]}),(0,s.jsx)(r.h4,{id:"returns-7",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardRemoveElements.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardRemoveElements.Error"})}),"\n"]})]}),(0,s.jsxs)("div",{class:"col col--8",children:[(0,s.jsx)(t.r,{js:"// Provide a list of element IDs to delete those elements\nconst result = await leaderboard.removeElements([123, 456, 789]);\nswitch (result.type) {\n  case LeaderboardRemoveElementsResponse.Success:\n    console.log('Successfully removed elements');\n    break;\n  case LeaderboardRemoveElementsResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call removeElements on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result.errorCode()}: ${result.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:"_, err := leaderboard.RemoveElements(ctx, momento.LeaderboardRemoveElementsRequest{Ids: []uint32{123, 456}})\nif err != nil {\n\tpanic(err)\n}",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),(0,s.jsxs)(n,{children:[(0,s.jsx)("summary",{children:"For large leaderboards, you will need to remove in batches of up to 8192 elements."}),(0,s.jsx)(t.r,{js:"// You can remove batches of 8192 elements at a time.\n// This example shows how to paginate for a large value of `totalNumElements`, such as `20000`.\nconst ids = [...Array(totalNumElements).keys()];\nfor (let i = 0; i < totalNumElements; i += 8192) {\n  const result = await leaderboard.removeElements(ids.slice(i, i + 8192));\n  switch (result.type) {\n    case LeaderboardRemoveElementsResponse.Success:\n      break;\n    case LeaderboardRemoveElementsResponse.Error:\n      console.log(`Error removing batch [${i}, ${i + 8192}) (${result.errorCode()}: ${result.message()})`);\n      break;\n  }\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})]})]})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)("div",{class:"row",children:[(0,s.jsxs)("div",{class:"col col--4",style:{paddingRight:"20px"},children:[(0,s.jsx)(r.h3,{id:"delete-leaderboard",children:"Delete leaderboard"}),(0,s.jsx)(r.p,{children:"Deletes the leaderboard. The leaderboard name is inferred from the Leaderboard object."}),(0,s.jsx)(r.h4,{id:"parameters-8",children:"Parameters"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.h4,{id:"returns-8",children:"Returns"}),(0,s.jsx)(r.hr,{}),(0,s.jsx)(r.p,{children:"One of the following:"}),(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#success",children:"LeaderboardDelete.Success"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"/leaderboards/api-reference/response-objects#error",children:"LeaderboardDelete.Error"})}),"\n"]})]}),(0,s.jsx)("div",{class:"col col--8",children:(0,s.jsx)(t.r,{js:"const result = await leaderboard.delete();\nswitch (result.type) {\n  case LeaderboardDeleteResponse.Success:\n    console.log('Successfully deleted the leaderboard');\n    break;\n  case LeaderboardDeleteResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call delete on leaderboard 'momento-leaderboard' in cache '${cacheName}': ${result.errorCode()}: ${result.message()}`\n    );\n}",python:"",java:"",kotlin:"",go:"_, err := leaderboard.Delete(ctx)\nif err != nil {\n\tpanic(err)\n}",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""})})]}),"\n",(0,s.jsx)(r.hr,{})]})}function m(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},51441:(e,r,n)=>{n(96540)},35347:(e,r,n)=>{n.d(r,{r:()=>g});var s=n(11470),a=n(19365),t=n(21432),l=(n(96540),n(27293)),o=n(74848);const d="https://github.com/momentohq/client-sdk-javascript/blob/main/examples/nodejs/cache/doc-example-files/doc-examples-js-apis.ts",i="https://github.com/momentohq/client-sdk-python/blob/main/examples/py310/doc-examples-python-apis.py",c="https://github.com/momentohq/client-sdk-java/blob/main/examples/cache/src/main/java/momento/client/example/doc_examples/DocExamplesJavaAPIs.java",h="https://github.com/momentohq/client-sdk-kotlin/blob/main/examples/src/main/kotlin/software/momento/example/doc_examples/DocExamples.kt",m="https://github.com/momentohq/client-sdk-go/blob/main/examples/docs-examples/main.go",p="https://github.com/momentohq/client-sdk-dotnet/blob/main/examples/DocExampleApis/Program.cs",u="https://github.com/momentohq/client-sdk-php/blob/main/examples/doc-examples-php-apis.php",b="https://github.com/momentohq/client-sdk-rust/blob/main/example/rust/src/docs_examples/docs_examples.rs",x="https://github.com/momentohq/client-sdk-elixir/blob/main/examples/doc_examples.exs",j="https://github.com/momentohq/client-sdk-swift/blob/main/Examples/doc-example-apis/Sources/main.swift",f="https://github.com/momentohq/client-sdk-dart/blob/main/example/doc_example_apis/bin/doc_example_apis.dart",g=e=>{let{js:r,python:n,java:g,kotlin:v,go:y,csharp:w,php:k,rust:R,ruby:L,elixir:E,swift:S,dart:A,cli:P}=e;return r||n||g||v||y||w||k||R||L||E||S||A||P?(0,o.jsxs)(s.A,{children:[r&&(0,o.jsxs)(a.A,{value:"js",label:"JavaScript",children:[(0,o.jsx)(t.A,{language:"js",children:r}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:d,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),n&&(0,o.jsxs)(a.A,{value:"python",label:"Python",children:[(0,o.jsx)(t.A,{language:"python",children:n}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:i,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),g&&(0,o.jsxs)(a.A,{value:"java",label:"Java",children:[(0,o.jsx)(t.A,{language:"java",children:g}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:c,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),v&&(0,o.jsxs)(a.A,{value:"kotlin",label:"Kotlin",children:[(0,o.jsx)(t.A,{language:"kotlin",children:v}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:h,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),y&&(0,o.jsxs)(a.A,{value:"go",label:"Go",children:[(0,o.jsx)(t.A,{language:"go",children:y}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:m,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),w&&(0,o.jsxs)(a.A,{value:"csharp",label:"C#",children:[(0,o.jsx)(t.A,{language:"csharp",children:w}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:p,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),k&&(0,o.jsxs)(a.A,{value:"php",label:"PHP",children:[(0,o.jsx)(t.A,{language:"php",children:k}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:u,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),R&&(0,o.jsxs)(a.A,{value:"rust",label:"Rust",children:[(0,o.jsx)(t.A,{language:"rust",children:R}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:b,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),L&&(0,o.jsx)(a.A,{value:"ruby",label:"Ruby",children:(0,o.jsx)(t.A,{language:"ruby",children:L})}),E&&(0,o.jsxs)(a.A,{value:"elixir",label:"Elixir",children:[(0,o.jsx)(t.A,{language:"elixir",children:E}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:x,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),S&&(0,o.jsxs)(a.A,{value:"swift",label:"Swift",children:[(0,o.jsx)(t.A,{language:"swift",children:S}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:j,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),A&&(0,o.jsxs)(a.A,{value:"dart",label:"Dart",children:[(0,o.jsx)(t.A,{language:"dart",children:A}),(0,o.jsxs)(l.A,{type:"info",children:["Full example code and imports can be found ",(0,o.jsx)("a",{href:f,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),P&&(0,o.jsx)(a.A,{value:"cli",label:"CLI",children:(0,o.jsx)(t.A,{language:"cli",children:P})})]}):null}}}]);