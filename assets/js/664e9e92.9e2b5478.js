"use strict";(self.webpackChunkmomento_docs=self.webpackChunkmomento_docs||[]).push([[1021],{14085:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>x,frontMatter:()=>r,metadata:()=>a,toc:()=>o});var n=s(74848),i=s(28453),l=(s(51441),s(35347));const r={sidebar_position:2,sidebar_label:"Lists",title:"List API reference",description:"Learn how to interact with the API for list collection data types in Momento Cache."},c="List API reference for Momento Cache",a={id:"cache/develop/api-reference/list-collections",title:"List API reference",description:"Learn how to interact with the API for list collection data types in Momento Cache.",source:"@site/docs/cache/develop/api-reference/list-collections.md",sourceDirName:"cache/develop/api-reference",slug:"/cache/develop/api-reference/list-collections",permalink:"/cache/develop/api-reference/list-collections",draft:!1,unlisted:!1,editUrl:"https://github.com/momentohq/public-dev-docs/tree/main/docs/cache/develop/api-reference/list-collections.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Lists",title:"List API reference",description:"Learn how to interact with the API for list collection data types in Momento Cache."},sidebar:"cacheSidebar",previous:{title:"Dictionary",permalink:"/cache/develop/api-reference/dictionary-collections"},next:{title:"Sets",permalink:"/cache/develop/api-reference/set-collections"}},h={},o=[{value:"List methods",id:"list-methods",level:2},{value:"ListFetch",id:"listfetch",level:3},{value:"ListConcatenateBack",id:"listconcatenateback",level:3},{value:"ListConcatenateFront",id:"listconcatenatefront",level:3},{value:"ListLength",id:"listlength",level:3},{value:"ListPopBack",id:"listpopback",level:3},{value:"ListPopFront",id:"listpopfront",level:3},{value:"ListPushBack",id:"listpushback",level:3},{value:"ListPushFront",id:"listpushfront",level:3},{value:"ListRemoveValue",id:"listremovevalue",level:3},{value:"ListRetain",id:"listretain",level:3},{value:"Truncate to size",id:"truncate-to-size",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"list-api-reference-for-momento-cache",children:"List API reference for Momento Cache"})}),"\n",(0,n.jsxs)(t.p,{children:["This page details the Momento API methods for the ",(0,n.jsx)(t.a,{href:"/cache/develop/basics/datatypes#lists",children:"list collection data types"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Momento collection types use a ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL"}),' to specify their TTL behavior. This is an optional argument for all "write" operations.']})}),"\n",(0,n.jsx)(t.h2,{id:"list-methods",children:"List methods"}),"\n",(0,n.jsx)(t.h3,{id:"listfetch",children:"ListFetch"}),"\n",(0,n.jsx)(t.p,{children:"Gets a list item from a cache, with optional slices."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"The name of the list item to be retrieved."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"startIndex"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["The starting inclusive element of the list to fetch. Default is 0. ",(0,n.jsx)(t.strong,{children:"This argument is optional."})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"endIndex"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["The ending exclusive element of the list to fetch. Default is end of list. ",(0,n.jsx)(t.strong,{children:"This argument is optional."})]})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"The response object for ListFetch returns three possible options, a cache hit, miss, or an error."}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"valueListBytes(): Bytes[]"}),"\n",(0,n.jsx)(t.li,{children:"valueListString(): String[]"}),"\n",(0,n.jsxs)(t.li,{children:["toString(): String - Display a truncated valueListString(). See ",(0,n.jsx)(t.a,{href:"#truncate-to-size",children:"truncation"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateBack(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listFetch(cacheName, 'test-list');\n\n// simplified style; assume the value was found\nconsole.log(`cache hit: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheListFetchResponse.Hit:\n    console.log(`List fetched successfully: ${result.value()}`);\n    break;\n  case CacheListFetchResponse.Miss:\n    console.log(`List 'test-list' was not found in cache '${cacheName}'`);\n    break;\n  case CacheListFetchResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to fetch the list 'test-list' from cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let _fetched_values: Vec<String> = cache_client\n      .list_fetch(cache_name, "list_name")\n      .await?\n      .try_into()\n      .expect("Expected a list fetch!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listconcatenateback",children:"ListConcatenateBack"}),"\n",(0,n.jsx)(t.p,{children:"Appends the supplied list to the end of an existing list item."}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.p,{children:"If you have [1, 2, 3] and listConcatenateBack [4, 5, 6] you will have [1, 2, 3, 4, 5, 6]."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"values"}),(0,n.jsx)(t.td,{children:"String[] | Bytes[]"}),(0,n.jsx)(t.td,{children:"Values to be added as elements to the list item."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the list item in cache. This TTL takes precedence over the TTL used when initializing a cache client connection object."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"truncateFrontToSize"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["See ",(0,n.jsx)(t.a,{href:"#truncate-to-size",children:"truncate to size"}),"."]})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Success","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"listLength()"}),": Number - the new length of the list"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": String - add the listLength"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateBack(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listConcatenateBack(cacheName, 'test-list', ['x', 'y', 'z']);\nswitch (result.type) {\n  case CacheListConcatenateBackResponse.Success:\n    console.log(`Values added successfully to the back of the list 'test-list'. Result - ${result.toString()}`);\n    break;\n  case CacheListConcatenateBackResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListConcatenateBack on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  cache_client\n      .list_concatenate_back(cache_name, "list_name", vec!["value1", "value2"])\n      .await?;\n  println!("Elements appended to list");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listconcatenatefront",children:"ListConcatenateFront"}),"\n",(0,n.jsx)(t.p,{children:"Appends the supplied list to the front of an existing list item."}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.p,{children:"If you have [1, 2, 3] and listConcatenateFront [4, 5, 6] you will have [4, 5, 6, 1, 2, 3]."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"values"}),(0,n.jsx)(t.td,{children:"String[] | Bytes[]"}),(0,n.jsx)(t.td,{children:"Values to be added as elements to the list item."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the list item in cache. This TTL takes precedence over the TTL used when initializing a cache client."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"truncateBackToSize"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["See ",(0,n.jsx)(t.a,{href:"#truncate-to-size",children:"truncate to size"}),"."]})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Success","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"listLength()"}),": Number - the new length of the list item"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": String - add the listLength"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateFront(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listConcatenateFront(cacheName, 'test-list', ['x', 'y', 'z']);\nswitch (result.type) {\n  case CacheListConcatenateFrontResponse.Success:\n    console.log(`Values added successfully to the front of the list 'test-list'. Result - ${result.toString()}`);\n    break;\n  case CacheListConcatenateFrontResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListConcatenateFront on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  cache_client\n      .list_concatenate_front(cache_name, "list_name", vec!["value1", "value2"])\n      .await?;\n  println!("Elements prepended to list");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listlength",children:"ListLength"}),"\n",(0,n.jsx)(t.p,{children:"Get the length of an existing list item"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be checked."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"length()"}),": Number"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateBack(cacheName, 'test-list', ['one', 'two', 'three']);\nconst result = await cacheClient.listLength(cacheName, 'test-list');\n\n// simplified style; assume the value was found\nconsole.log(`Length of list 'test-list' is: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheListLengthResponse.Hit:\n    console.log(`Length of list 'test-list' is ${result.length()}`);\n    break;\n  case CacheListLengthResponse.Miss:\n    console.log(`List 'test-list' was not found in cache '${cacheName}'`);\n    break;\n  case CacheListLengthResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListLength on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let _length: u32 = cache_client\n      .list_length(cache_name, "list_name")\n      .await?\n      .try_into()\n      .expect("Expected a list length!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listpopback",children:"ListPopBack"}),"\n",(0,n.jsx)(t.p,{children:"Remove and return the last element from a list item."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be retrieved."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"valueString()"}),": String"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"valueBytes()"}),": Bytes"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": truncated valueString()"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateBack(cacheName, 'test-list', ['one', 'two', 'three']);\nconst result = await cacheClient.listPopBack(cacheName, 'test-list');\n\n// simplified style; assume the value was found\nconsole.log(`Last value, removed from 'test-list' is: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheListPopBackResponse.Hit:\n    console.log(`Last value was removed successfully from list 'test-list': ${result.value()}`);\n    break;\n  case CacheListPopBackResponse.Miss:\n    console.log(`List 'test-list' was not found in cache '${cacheName}'`);\n    break;\n  case CacheListPopBackResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListPopBack on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let _popped_value: String = cache_client\n      .list_pop_back(cache_name, "list_name")\n      .await?\n      .try_into()\n      .expect("Expected a popped list value!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listpopfront",children:"ListPopFront"}),"\n",(0,n.jsx)(t.p,{children:"Remove and return the first element from a list item."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be retrieved."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Hit","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"valueString()"}),": String"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"valueBytes()"}),": Bytes"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": truncated valueString()"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Miss"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateFront(cacheName, 'test-list', ['one', 'two', 'three']);\nconst result = await cacheClient.listPopFront(cacheName, 'test-list');\n\n// simplified style; assume the value was found\nconsole.log(`First value, removed from 'test-list' is: ${result.value()!}`);\n\n// pattern-matching style; safer for production code\nswitch (result.type) {\n  case CacheListPopFrontResponse.Hit:\n    console.log(`First value was removed successfully from list 'test-list': ${result.value()}`);\n    break;\n  case CacheListPopFrontResponse.Miss:\n    console.log(`List 'test-list' was not found in cache '${cacheName}'`);\n    break;\n  case CacheListPopFrontResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListPopFront on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  let _popped_value: String = cache_client\n      .list_pop_front(cache_name, "list_name")\n      .await?\n      .try_into()\n      .expect("Expected a popped list value!");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listpushback",children:"ListPushBack"}),"\n",(0,n.jsxs)(t.p,{children:["Push a value to the end of a list item. This is exactly like passing just one value to ",(0,n.jsx)(t.a,{href:"#listconcatenateback",children:"ListConcatenateBack"}),"."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"value"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Value to be added."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the list item in cache. This TTL takes precedence over the TTL used when initializing a cache connection client."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"truncateBackToSize"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["See ",(0,n.jsx)(t.a,{href:"#truncate-to-size",children:"truncate to size"}),"."]})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Success","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"listLength()"}),": Number - the new length of the list item"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": String - add the listLength"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateBack(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listPushBack(cacheName, 'test-list', 'x');\nswitch (result.type) {\n  case CacheListPushBackResponse.Success:\n    console.log(\"Value 'x' added successfully to back of list 'test-list'\");\n    break;\n  case CacheListPushBackResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListPushBack on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listpushfront",children:"ListPushFront"}),"\n",(0,n.jsxs)(t.p,{children:["Push a value to the beginning of a list item. Just like ",(0,n.jsx)(t.a,{href:"#listpushback",children:"ListPushBack"}),", but to the front."]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"value"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Value to be added to the list item by the operation."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the list item in cache. This TTL takes precedence over the TTL used when initializing a cache connection client."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"truncateBackToSize"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsxs)(t.td,{children:["See ",(0,n.jsx)(t.a,{href:"#truncate-to-size",children:"truncate to size"}),"."]})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Success","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"listLength()"}),": Number - the new length of the list"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"toString()"}),": String - add the listLength"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateFront(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listPushFront(cacheName, 'test-list', 'x');\nswitch (result.type) {\n  case CacheListPushFrontResponse.Success:\n    console.log(\"Value 'x' added successfully to front of list 'test-list'\");\n    break;\n  case CacheListPushFrontResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListPushFront on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listremovevalue",children:"ListRemoveValue"}),"\n",(0,n.jsx)(t.p,{children:"Remove all elements in a list item equal to a particular value."}),"\n",(0,n.jsx)(t.p,{children:"Examples"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["If you have the list ",(0,n.jsx)(t.code,{children:"['up', 'up', 'down', 'down', 'left', 'right']"})," and remove \u2018up\u2019 the list will be ",(0,n.jsx)(t.code,{children:"['down', 'down', 'left', 'right']"})]}),"\n"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"value"}),(0,n.jsx)(t.td,{children:"String | Bytes"}),(0,n.jsx)(t.td,{children:"Value to be added to the list item by the operation."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"Responses"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success - even if the value does not exist"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateFront(cacheName, 'test-list', ['a', 'b', 'c']);\nconst result = await cacheClient.listRemoveValue(cacheName, 'test-list', 'b');\nswitch (result.type) {\n  case CacheListRemoveValueResponse.Success:\n    console.log(\"Value 'b' removed successfully from list 'test-list'\");\n    break;\n  case CacheListRemoveValueResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListRemoveValue on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:'  cache_client\n      .list_remove_value(cache_name, "list_name", "value1")\n      .await?;\n  println!("Value removed from list");',elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h3,{id:"listretain",children:"ListRetain"}),"\n",(0,n.jsx)(t.p,{children:"Retains only slice of the list where the start is inclusive and the end is exclusive.  The items outside of this range will be dropped from the list."}),"\n",(0,n.jsx)(t.p,{children:"Example:\nFor the specified list, start at index 4 (the startIndex) and keep the next five elements, end at index 10 (the endIndex). Discard all other elements in the list. In this example, elements at position 0-3 and 9 or higher are dropped."}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Name"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"cacheName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the cache."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listName"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:"Name of the list item to be set."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"startIndex"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsx)(t.td,{children:"The starting inclusive element of the list to retain. Default is 0."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"endIndex"}),(0,n.jsx)(t.td,{children:"Number"}),(0,n.jsx)(t.td,{children:"The ending exclusive element of the list to retain. Default is end of list."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ttl"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/collection-ttl",children:"CollectionTTL object"})}),(0,n.jsx)(t.td,{children:"TTL for the list item in cache. This TTL takes precedence over the TTL used when initializing a cache connection client."})]})]})]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("summary",{children:"Method response object"}),(0,n.jsx)(t.p,{children:"Responses"}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Success - even if the value does not exist"}),"\n",(0,n.jsx)(t.li,{children:"Error"}),"\n"]}),(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/cache/develop/api-reference/response-objects",children:"response objects"})," for specific information."]})]}),"\n",(0,n.jsx)(l.r,{js:"await cacheClient.listConcatenateFront(cacheName, 'test-list', ['a', 'b', 'c', 'd', 'e', 'f']);\nconst result = await cacheClient.listRetain(cacheName, 'test-list', {startIndex: 1, endIndex: 4});\nswitch (result.type) {\n  case CacheListRetainResponse.Success:\n    console.log(\"Retaining elements from index 1 to 4 from list 'test-list'\");\n    break;\n  case CacheListRetainResponse.Error:\n    throw new Error(\n      `An error occurred while attempting to call cacheListRetain on list 'test-list' in cache '${cacheName}': ${result.errorCode()}: ${result.toString()}`\n    );\n}",python:"",java:"",kotlin:"",go:"",csharp:"",php:"",rust:"",elixir:"",swift:"",dart:"",ts:""}),"\n",(0,n.jsx)(t.h2,{id:"truncate-to-size",children:"Truncate to size"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"#listconcatenateback",children:"ListConcatenate"})," and ",(0,n.jsx)(t.a,{href:"#listpushback",children:"ListPush"})," type API calls all have truncation options. If after adding their elements the list exceeds this size, this list will be truncated."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Example: If the list is ",(0,n.jsx)(t.code,{children:"[1, 2, 3]"})," and you ListConcatenateBack ",(0,n.jsx)(t.code,{children:"[4, 5, 6]"})," with ",(0,n.jsx)(t.code,{children:"truncateFrontToSize: 5"})," the list will be truncated to ",(0,n.jsx)(t.code,{children:"[2, 3, 4, 5, 6]"})," and the response ListLength will be 5."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Example: If the list is ",(0,n.jsx)(t.code,{children:"[1, 2, 3]"})," and you ListConcatenateBack ",(0,n.jsx)(t.code,{children:"[4, 5, 6]"})," with ",(0,n.jsx)(t.code,{children:"truncateFrontToSize: 10"})," the list will not be truncated. It will be ",(0,n.jsx)(t.code,{children:"[1, 2, 3, 4, 5, 6]"})]}),"\n"]}),"\n"]})]})}function x(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},51441:(e,t,s)=>{s(96540)},35347:(e,t,s)=>{s.d(t,{r:()=>g});var n=s(11470),i=s(19365),l=s(21432),r=(s(96540),s(27293)),c=s(74848);const a="https://github.com/momentohq/client-sdk-javascript/blob/main/examples/nodejs/cache/doc-example-files/doc-examples-js-apis.ts",h="https://github.com/momentohq/client-sdk-python/blob/main/examples/py310/doc-examples-python-apis.py",o="https://github.com/momentohq/client-sdk-java/blob/main/examples/cache/src/main/java/momento/client/example/doc_examples/DocExamplesJavaAPIs.java",d="https://github.com/momentohq/client-sdk-kotlin/blob/main/examples/src/main/kotlin/software/momento/example/doc_examples/DocExamples.kt",x="https://github.com/momentohq/client-sdk-go/blob/main/examples/docs-examples/main.go",j="https://github.com/momentohq/client-sdk-dotnet/blob/main/examples/DocExampleApis/Program.cs",p="https://github.com/momentohq/client-sdk-php/blob/main/examples/doc-examples-php-apis.php",u="https://github.com/momentohq/client-sdk-rust/blob/main/example/rust/src/docs_examples/docs_examples.rs",m="https://github.com/momentohq/client-sdk-elixir/blob/main/examples/doc_examples.exs",f="https://github.com/momentohq/client-sdk-swift/blob/main/Examples/doc-example-apis/Sources/main.swift",b="https://github.com/momentohq/client-sdk-dart/blob/main/example/doc_example_apis/bin/doc_example_apis.dart",g=e=>{let{js:t,python:s,java:g,kotlin:v,go:w,csharp:y,php:L,rust:k,ruby:S,elixir:C,swift:N,dart:T,cli:_}=e;return t||s||g||v||w||y||L||k||S||C||N||T||_?(0,c.jsxs)(n.A,{children:[t&&(0,c.jsxs)(i.A,{value:"js",label:"JavaScript",children:[(0,c.jsx)(l.A,{language:"js",children:t}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:a,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),s&&(0,c.jsxs)(i.A,{value:"python",label:"Python",children:[(0,c.jsx)(l.A,{language:"python",children:s}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:h,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),g&&(0,c.jsxs)(i.A,{value:"java",label:"Java",children:[(0,c.jsx)(l.A,{language:"java",children:g}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:o,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),v&&(0,c.jsxs)(i.A,{value:"kotlin",label:"Kotlin",children:[(0,c.jsx)(l.A,{language:"kotlin",children:v}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:d,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),w&&(0,c.jsxs)(i.A,{value:"go",label:"Go",children:[(0,c.jsx)(l.A,{language:"go",children:w}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:x,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),y&&(0,c.jsxs)(i.A,{value:"csharp",label:"C#",children:[(0,c.jsx)(l.A,{language:"csharp",children:y}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:j,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),L&&(0,c.jsxs)(i.A,{value:"php",label:"PHP",children:[(0,c.jsx)(l.A,{language:"php",children:L}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:p,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),k&&(0,c.jsxs)(i.A,{value:"rust",label:"Rust",children:[(0,c.jsx)(l.A,{language:"rust",children:k}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:u,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),S&&(0,c.jsx)(i.A,{value:"ruby",label:"Ruby",children:(0,c.jsx)(l.A,{language:"ruby",children:S})}),C&&(0,c.jsxs)(i.A,{value:"elixir",label:"Elixir",children:[(0,c.jsx)(l.A,{language:"elixir",children:C}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:m,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),N&&(0,c.jsxs)(i.A,{value:"swift",label:"Swift",children:[(0,c.jsx)(l.A,{language:"swift",children:N}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:f,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),T&&(0,c.jsxs)(i.A,{value:"dart",label:"Dart",children:[(0,c.jsx)(l.A,{language:"dart",children:T}),(0,c.jsxs)(r.A,{type:"info",children:["Full example code and imports can be found ",(0,c.jsx)("a",{href:b,target:"_blank",rel:"noopener noreferrer",children:"here"})]})]}),_&&(0,c.jsx)(i.A,{value:"cli",label:"CLI",children:(0,c.jsx)(l.A,{language:"cli",children:_})})]}):null}}}]);